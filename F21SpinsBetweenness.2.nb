(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    658919,      12094]
NotebookOptionsPosition[    656044,      12035]
NotebookOutlinePosition[    656444,      12051]
CellTagsIndexPosition[    656401,      12048]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["1 Import Data, CD Algorithm via Edge Betweenness", "Section",
 CellChangeTimes->{{3.844345934084111*^9, 3.8443459888100505`*^9}, {
   3.8443460635238156`*^9, 3.844346080064009*^9}, {3.8443462745623255`*^9, 
   3.8443462747843614`*^9}, {3.8443501078000717`*^9, 
   3.8443501182068977`*^9}, {3.844424037517646*^9, 3.84442405380764*^9}, 
   3.852191152439825*^9},ExpressionUUID->"60dab23a-8dff-4a3f-b509-\
657ab3a5ce48"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", "=", 
    RowBox[{
     RowBox[{
     "Import", "[", 
      "\"\<C:\\\\Users\\\\riiwi\\\\OneDrive - University of Maine \
System\\\\Will\\\\Data Collection and Analysis\\\\Surveys F21\\\\All \
Spins\\\\F21SpinsExpressionPerStudentResults.xlsx\>\"", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"imports", " ", "the", " ", "per"}], "-", 
    RowBox[{
    "student", " ", "expression", " ", "results", " ", "excel", " ", 
     "file"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], " ", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", 
     RowBox[{
      RowBox[{"Dimensions", "[", "data", "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "this", " ", "loop", " ", "turns", " ", "all", " ", "of", " ", "the", 
       " ", "weights", " ", "into", " ", 
       RowBox[{"integers", ".", "  ", "This"}], " ", "is", " ", "necessary", 
       " ", "to", " ", "make", " ", "the", " ", "weights"}], " ", "\[Rule]", 
      " ", 
      RowBox[{"#", " ", "of", " ", "links"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "[", 
      RowBox[{"[", "3", "]"}], "]"}], "=", 
     RowBox[{"Round", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "this", " ", "block", " ", "is", " ", "just", " ", "extracting", " ", 
     "all", " ", "of", " ", "the", " ", "info", " ", "from", " ", "the", " ", 
     "imported", " ", "file"}], ",", " ", 
    RowBox[{
    "as", " ", "well", " ", "as", " ", "naming", " ", "the", " ", 
     "vertices"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vertices", "=", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Property", "[", 
       RowBox[{"\"\<a\>\"", ",", 
        RowBox[{"VertexLabels", "\[Rule]", 
         RowBox[{"OverVector", "[", "\"\<v\>\"", "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<b\>\"", ",", 
        RowBox[{"VertexLabels", "\[Rule]", 
         RowBox[{"OverHat", "[", "\"\<j\>\"", "]"}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<c\>\"", ",", 
        RowBox[{"VertexLabels", "\[Rule]", 
         RowBox[{
         "OverHat", "[", "\"\<\!\(\*SubscriptBox[\(S\), \(z\)]\)\>\"", 
          "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<d\>\"", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<f(x)\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<e\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[VerticalSeparator]\[Psi]\[RightAngleBracket]\>\""}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<f\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[VerticalSeparator]\!\(\*SubscriptBox[\(E\), \(2\)]\)\
\[RightAngleBracket]\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<g\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \(1\)]\)\
\[VerticalSeparator]\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<h\>\"", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<\[Psi](x)\>\""}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<i\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)(x)\>\""}]}], "]"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<j\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(3\)]\)(x)\>\""}]}], "]"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<k\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\!\(\*SubsuperscriptBox[\(\[CurlyPhi]\), \(4\), \
\(*\)]\)(x)\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<l\>\"", ",", 
        RowBox[{"VertexLabels", "\[Rule]", 
         RowBox[{
          RowBox[{"OverVector", "[", "\"\<u\>\"", "]"}], "\[CenterDot]", 
          RowBox[{"OverVector", "[", "\"\<v\>\"", "]"}]}]}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<m\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\[Psi]\
\[RightAngleBracket]\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<n\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \(3\)]\)\
\[VerticalSeparator]\[Psi]\[RightAngleBracket]\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<o\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[Integral]\!\(\*SuperscriptBox[\(\[Psi]\), \
\(*\)]\)\[Psi]dx\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<p\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[Integral]\!\(\*SubsuperscriptBox[\(\[CurlyPhi]\), \(1\), \
\(*\)]\)\[Psi]dx\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<q\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[VerticalSeparator]\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\),\
 \(4\)]\)\[VerticalSeparator]\[Psi]\[RightAngleBracket]\!\(\*SuperscriptBox[\(\
\[VerticalSeparator]\), \(2\)]\)\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<r\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[VerticalSeparator]\[Integral]\!\(\*SuperscriptBox[\(\[Psi]\), \
\(*\)]\)\[Psi]dx\!\(\*SuperscriptBox[\(\[VerticalSeparator]\), \
\(2\)]\)\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<s\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[VerticalSeparator]\[Integral]\!\(\*SubsuperscriptBox[\(\
\[CurlyPhi]\), \(2\), \(*\)]\)\[Psi]dx\!\(\*SuperscriptBox[\(\
\[VerticalSeparator]\), \(2\)]\)\>\""}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Property", "[", 
       RowBox[{"\"\<t\>\"", ",", 
        RowBox[{
        "VertexLabels", "\[Rule]", 
         "\"\<\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\>\""}]}], "]"}]}],
      "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vertexLabels", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"OverVector", "[", "\"\<v\>\"", "]"}], ",", 
     RowBox[{"OverHat", "[", "\"\<j\>\"", "]"}], ",", 
     RowBox[{
     "OverHat", "[", "\"\<\!\(\*SubscriptBox[\(S\), \(z\)]\)\>\"", "]"}], 
     ",", "\"\<f(x)\>\"", ",", 
     "\"\<\[VerticalSeparator]\[Psi]\[RightAngleBracket]\>\"", ",", 
     "\"\<\[VerticalSeparator]\!\(\*SubscriptBox[\(E\), \(2\)]\)\
\[RightAngleBracket]\>\"", ",", 
     "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \(1\)]\)\
\[VerticalSeparator]\>\"", ",", "\"\<\[Psi](x)\>\"", ",", 
     "\"\<\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)(x)\>\"", ",", 
     "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(3\)]\)(x)\>\"", ",", 
     "\"\<\!\(\*SubsuperscriptBox[\(\[CurlyPhi]\), \(4\), \(*\)]\)(x)\>\"", 
     ",", 
     RowBox[{
      RowBox[{"OverVector", "[", "\"\<u\>\"", "]"}], "\[CenterDot]", 
      RowBox[{"OverVector", "[", "\"\<v\>\"", "]"}]}], ",", 
     "\"\<\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\[Psi]\
\[RightAngleBracket]\>\"", ",", 
     "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \(3\)]\)\
\[VerticalSeparator]\[Psi]\[RightAngleBracket]\>\"", ",", 
     "\"\<\[Integral]\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)\[Psi]dx\>\"", 
     ",", "\"\<\[Integral]\!\(\*SubsuperscriptBox[\(\[CurlyPhi]\), \(1\), \(*\
\)]\)\[Psi]dx\>\"", ",", 
     "\"\<\[VerticalSeparator]\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \
\(4\)]\)\[VerticalSeparator]\[Psi]\[RightAngleBracket]\!\(\*SuperscriptBox[\(\
\[VerticalSeparator]\), \(2\)]\)\>\"", ",", 
     "\"\<\[VerticalSeparator]\[Integral]\!\(\*SuperscriptBox[\(\[Psi]\), \(*\
\)]\)\[Psi]dx\!\(\*SuperscriptBox[\(\[VerticalSeparator]\), \(2\)]\)\>\"", 
     ",", "\"\<\[VerticalSeparator]\[Integral]\!\(\*SubsuperscriptBox[\(\
\[CurlyPhi]\), \(2\), \(*\)]\)\[Psi]dx\!\(\*SuperscriptBox[\(\
\[VerticalSeparator]\), \(2\)]\)\>\"", ",", 
     "\"\<\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"edges", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[UndirectedEdge]", 
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edgeweights", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "here", " ", "I", " ", "create", " ", "another", " ", "version", " ", 
     "of", " ", "edgeweights"}], ",", " ", 
    RowBox[{
    "but", " ", "one", " ", "that", " ", "I", " ", "will", " ", "not", " ", 
     "change", " ", "throughout", " ", "the", " ", "algorithm"}], ",", " ", 
    RowBox[{
    "just", " ", "so", " ", "I", " ", "can", " ", "see", " ", "what", " ", 
     "the", " ", "weights", " ", "are", " ", "even", " ", "after", " ", "the",
      " ", "algorithm", " ", "has", " ", "run"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"weights", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"data", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "3"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "data", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "creates", " ", "a", " ", "basic", " ", "graph", " ", "of", " ", "the", 
    " ", "network"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"g", "=", 
    RowBox[{"Graph", "[", 
     RowBox[{"vertices", ",", "edges", ",", 
      RowBox[{"EdgeWeight", "\[Rule]", "edgeweights"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"WeightedAdjacencyMatrix", "[", "g", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"G", "=", 
    RowBox[{"AdjacencyGraph", "[", 
     RowBox[{"vertices", ",", "a"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "block", " ", "turns", " ", "the", " ", "weights", " ", 
    "into", " ", "#", " ", "of", " ", "links"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"VertexList", "[", "g", "]"}], ",", 
     RowBox[{"VertexSize", "\[Rule]", 
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{"VertexList", "[", "g", "]"}], "\[Rule]", 
        RowBox[{"Rescale", "[", 
         RowBox[{"BetweennessCentrality", "[", "g", "]"}], "]"}]}], "]"}]}]}],
     "]"}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wcent", "=", 
    RowBox[{
     RowBox[{"EdgeBetweennessCentrality", "[", "g", "]"}], "/", 
     "edgeweights"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "creates", " ", "the", " ", "centrality", " ", "weights", " ", "for", " ",
      "all", " ", "of", " ", "the", " ", "edges", " ", "in", " ", "the", " ", 
     RowBox[{"network", ".", " ", "The"}], " ", "reason", " ", "for", " ", 
     "the", " ", "division", " ", "by", " ", "the", " ", "edgeweights", " ", 
     "is", " ", "because", " ", "we", " ", "are", " ", "treating", " ", 
     "each", " ", "edge", " ", "with", " ", "more", " ", "than", " ", "one", 
     " ", "weight", " ", "as", " ", "multiple", " ", "edges", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
       "as", " ", "many", " ", "edges", " ", "as", " ", "they", " ", "are", 
        " ", "weighted", " ", "by"}], ")"}], ".", " ", "This"}], " ", "means",
      " ", "that", " ", "their", " ", "betweenness", " ", "should", " ", "be",
      " ", "reduced", " ", "by", " ", "that", " ", "factor"}], ",", " ", 
    RowBox[{
    "as", " ", "a", " ", "more", " ", "weighted", " ", "connection", " ", 
     "should", " ", "be", " ", "less", " ", "likely", " ", "to", " ", "be", 
     " ", 
     RowBox[{"removed", ".", "  ", "This"}], " ", "is", " ", "just", " ", 
     "initializing", " ", "it", " ", "for", " ", "the", " ", "original", " ", 
     RowBox[{"network", ".", " ", "As"}], " ", "the", " ", "later", " ", 
     "for", " ", "loop", " ", "goes", " ", "on"}], ",", " ", 
    RowBox[{"it", " ", "will", " ", "be", " ", "updated", " ", "to"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "defines", " ", "num", " ", "and", " ", "numVerts", " ", "as", " ", "the",
      " ", "number", " ", "of", " ", "edges", " ", 
     RowBox[{"(", 
      RowBox[{"and", " ", "therefore", " ", "total", " ", "cuts"}], ")"}], 
     " ", "and", " ", "vertices"}], ",", " ", "respectively"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"num", "=", 
   RowBox[{
    RowBox[{"Dimensions", "[", "edgeweights", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"numVerts", "=", 
    RowBox[{
     RowBox[{"Dimensions", "[", "vertices", "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "initializes", " ", "a", " ", "list", " ", "that", " ", "will", " ", 
     "keep", " ", "track", " ", "of", " ", "the", " ", "edges", " ", "that", 
     " ", "are", " ", "removed"}], ",", " ", 
    RowBox[{
    "as", " ", "well", " ", "as", " ", "in", " ", "what", " ", "order", " ", 
     "they", " ", "were", " ", "removed"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"removeList", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "num"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
     "creates", " ", "the", " ", "same", " ", "graph", " ", "as", " ", "the", 
      " ", "per"}], "-", 
     RowBox[{
     "student", " ", "expression", " ", "network", " ", "code", " ", 
      "does"}]}], ",", " ", 
    RowBox[{"including", " ", "the", " ", "coloring"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"shapeFunc", "=", 
   RowBox[{
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"weight", "=", 
        RowBox[{"PropertyValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"g", ",", "#2"}], "}"}], ",", "EdgeWeight"}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "weight", "]"}], ",", 
        RowBox[{"Hue", "[", 
         RowBox[{
          RowBox[{"weight", "/", "32."}], ",", "1", ",", "1"}], "]"}], ",", 
        RowBox[{"Line", "@", "#1"}]}], "}"}]}], "]"}], "&"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{"vertices", ",", "edges", ",", 
     RowBox[{"EdgeWeight", "\[Rule]", "edgeweights"}], ",", 
     RowBox[{"EdgeShapeFunction", "\[Rule]", "shapeFunc"}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
     RowBox[{"VertexLabelStyle", "\[Rule]", "32"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tlG", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "num"}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "initializes", " ", "the", " ", "timelapse", " ", "table", " ", "that", 
    " ", "will", " ", "be", " ", "filled", " ", "with", " ", "the", " ", 
    "frames", " ", "of", " ", "the", " ", "timelapse", " ", "animation"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tlGraphs", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "num"}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "initializes", " ", "the", " ", "timelapse", " ", "table", " ", "that", 
    " ", "will", " ", "be", " ", "filled", " ", "with", " ", "the", " ", 
    "frames", " ", "of", " ", "the", " ", "timelapse", " ", 
    RowBox[{"animation", ".", "  ", "THIS"}], " ", "NOW", " ", "INCLUDES", 
    " ", "HIGHLIGHTING", " ", "THE", " ", "HIGHEST", " ", "CENTRALITY", " ", 
    "EDGE"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tlGraphs1", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "num"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"same", " ", "as", " ", "other", " ", "one"}], ",", " ", 
    RowBox[{
    "but", " ", "this", " ", "one", " ", "is", " ", "for", " ", "the", " ", 
     "colorized", " ", "timelapse"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tlGraphs2", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "num"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"same", " ", "as", " ", "tlGraphs1"}], ",", " ", 
    RowBox[{
    "but", " ", "without", " ", "resizing", " ", "the", " ", "vertices"}]}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tlGraphs3", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", "num"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tlGraphs4", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", "num"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tlGraphs5", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "num"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"centralityTable", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "num", ",", "numVerts"}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "initializes", " ", "the", " ", "table", " ", "for", " ", "storing", " ", 
    "the", " ", "centrality", " ", "scores", " ", "for", " ", "each", " ", 
    "vertex", " ", "as", " ", "the", " ", "network", " ", "is", " ", "pared", 
    " ", "down"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"highCentralityList", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", "num"}], "]"}]}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "initializes", " ", "the", " ", "list", " ", "for", " ", "storing", " ", 
     "which", " ", "edge", " ", "is", " ", "deleted", " ", "for", " ", "each",
      " ", "step"}], ",", " ", 
    RowBox[{
    "for", " ", "the", " ", "purposes", " ", "of", " ", "highlighting", " ", 
     "them", " ", "before", " ", "they", " ", "are", " ", "removed"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Defining", " ", "the", " ", "\"\<circle\>\"", " ", 
     RowBox[{"function", ".", "  ", "This"}], " ", "is", " ", "just", " ", 
     "for", " ", "making", " ", "all", " ", "of", " ", "the", " ", "networks",
      " ", "share", " ", "the", " ", "same", " ", "morphology", " ", "for", 
     " ", "ease", " ", "of", " ", "at"}], "-", "a", "-", 
    RowBox[{"glance", " ", "comparison"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"circle", "[", "n_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", "*", 
         RowBox[{"Pi", "/", "n"}], "*", "u"}], "]"}], ",", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", "*", 
         RowBox[{"Pi", "/", "n"}], "*", "u"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", "1", ",", "n"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "for", " ", "loop", " ", "generates", " ", "the", " ", 
     "timelapses", " ", "by", " ", "calculating", " ", "the", " ", 
     "betweenness", " ", "centrality", " ", "for", " ", "each", " ", "edge", 
     " ", "in", " ", "the", " ", "network"}], ",", " ", 
    RowBox[{
    "deleting", " ", "the", " ", "edge", " ", "with", " ", "the", " ", 
     "highest", " ", "betweenness"}], ",", " ", 
    RowBox[{
    "and", " ", "then", " ", "recalculating", " ", "betweennesses", " ", 
     "for", " ", "the", " ", "new", " ", "network"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", "num"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"centralityTable", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"BetweennessCentrality", "[", "g", "]"}]}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "records", " ", "the", " ", "centralities", " ", "of", " ", "vertices", 
      " ", "in", " ", "the", " ", "graph", " ", "at", " ", "this", " ", 
      "point", " ", "in", " ", "the", " ", 
      RowBox[{"algorithm", ".", "  ", "THIS"}], " ", 
      RowBox[{"ISN", "'"}], "T", " ", "USED", " ", "LATER"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"pos", "=", 
     RowBox[{"Ordering", "[", 
      RowBox[{"wcent", ",", 
       RowBox[{"-", "1"}]}], "]"}]}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "gives", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
      "current", " ", "largest", " ", "betweenness", " ", "within", " ", 
      "the", " ", "wcent", " ", "list"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"highCentralityList", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{
      RowBox[{"EdgeList", "[", "g", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"pos", "[", 
        RowBox[{"[", "]"}], "]"}], "]"}], "]"}]}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "records", " ", "the", " ", "edges", " ", "that", " ", "are", " ", 
       "removed"}], ",", " ", 
      RowBox[{
      "in", " ", "the", " ", "order", " ", "in", " ", "which", " ", "they", 
       " ", "are", " ", "removed"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"removeList", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"pos", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "adds", " ", "the", " ", "position", " ", "of", " ", "the", " ", 
       "current", " ", "largest", " ", "betweenness", " ", "to", " ", "the", 
       " ", "\"\<removeList\>\"", " ", "list"}], ",", " ", 
      RowBox[{
      "so", " ", "we", " ", "can", " ", "keep", " ", "track", " ", "of", " ", 
       "which", " ", "edges", " ", "have", " ", "been", " ", "removed", " ", 
       "and", " ", "in", " ", "what", " ", "order"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "fills", " ", "up", " ", "tlGraph", " ", "list", " ", "with", " ", 
       "each", " ", "graph"}], ",", " ", 
      RowBox[{
      "so", " ", "I", " ", "can", " ", "generate", " ", "a", " ", "timelapse",
        " ", "of", " ", "the", " ", "splitting"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tlG", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"Graph", "[", 
      RowBox[{"vertices", ",", "edges", ",", 
       RowBox[{"EdgeWeight", "\[Rule]", "edgeweights"}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"VertexLabelStyle", "\[Rule]", "30"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"tlGraphs", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "=", 
       RowBox[{"HighlightGraph", "[", 
        RowBox[{
         RowBox[{"tlG", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"highCentralityList", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "}"}]}], "]"}]}], ";"}], 
     "  ", "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tlGraphs", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"tlG", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"vd", "=", 
     RowBox[{"VertexDegree", "[", 
      RowBox[{"tlGraphs", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ";", "  ", 
    RowBox[{"(*", " ", 
     RowBox[{"assigns", " ", 
      RowBox[{"(", 
       RowBox[{"and", " ", "reassigns", " ", "on", " ", "each", " ", "loop"}],
        ")"}], " ", "vd", " ", "to", " ", "be", " ", "a", " ", "list", " ", 
      "of", " ", "the", " ", "vertex", " ", 
      RowBox[{"degrees", ".", " ", "This"}], " ", "will", " ", "be", " ", 
      "used", " ", "for", " ", "coloring", " ", 
      RowBox[{"(", 
       RowBox[{"and", " ", "maybe", " ", "sizing"}], ")"}], " ", "the", " ", 
      "vertices"}], " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "generates", " ", "list", " ", "of", " ", "graphs", " ", "with", " ", 
       "colors", " ", "added", " ", "to", " ", "the", " ", 
       RowBox[{"vertices", "/", 
        RowBox[{"edges", ".", " ", "tlGraphs1"}]}], " ", "includes", " ", 
       "larger", " ", "vertices"}], ",", " ", 
      RowBox[{"for", " ", "looking", " ", "at"}], ",", " ", 
      RowBox[{
      "while", " ", "tlGraphs2", " ", "is", " ", "intended", " ", "for", " ", 
       "GIFs", " ", 
       RowBox[{"(", 
        RowBox[{"smaller", " ", "vertices"}], ")"}]}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tlGraphs1", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"SetProperty", "[", 
      RowBox[{
       RowBox[{"tlGraphs", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexSize", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"VertexList", "[", 
             RowBox[{"tlGraphs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{".6", 
             RowBox[{
              RowBox[{"N", "[", 
               RowBox[{".1", "+", 
                RowBox[{"Rescale", "[", "vd", "]"}]}], "]"}], "^", ".5"}]}]}],
            "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"VertexList", "[", 
             RowBox[{"tlGraphs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                "}"}], "]"}], "/@", 
              RowBox[{"Rescale", "[", "vd", "]"}]}], ")"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeStyle", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"EdgeList", "[", 
             RowBox[{"tlGraphs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".005", "]"}], ",", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                    "}"}], "]"}], "[", "#", "]"}]}], "]"}], "&"}], "/@", 
              RowBox[{"Rescale", "[", "edgeweights", "]"}]}], ")"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tlGraphs2", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"SetProperty", "[", 
      RowBox[{
       RowBox[{"tlGraphs", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"VertexList", "[", 
             RowBox[{"tlGraphs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                "}"}], "]"}], "/@", 
              RowBox[{"Rescale", "[", "vd", "]"}]}], ")"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeStyle", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"EdgeList", "[", 
             RowBox[{"tlGraphs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".005", "]"}], ",", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                    "}"}], "]"}], "[", "#", "]"}]}], "]"}], "&"}], "/@", 
              RowBox[{"Rescale", "[", "edgeweights", "]"}]}], ")"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "generates", " ", "a", " ", "list", " ", "of", " ", "graphs", " ", 
       "that", " ", "is", " ", "tlGraphs2"}], ",", " ", 
      RowBox[{
       RowBox[{"but", " ", "with", " ", "the", " ", "highest"}], "-", 
       RowBox[{"betweenness", " ", "edge", " ", "having", " ", "no", " ", 
        RowBox[{"color", "/", "thickness"}], " ", 
        RowBox[{"applied", ".", "  ", "Intended"}], " ", "to", " ", 
        "highlight", " ", "which", " ", "edge", " ", "is", " ", "next", " ", 
        "to", " ", "be", " ", "removed"}]}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tlGraphs3", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"SetProperty", "[", 
      RowBox[{
       RowBox[{"tlGraphs", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"VertexList", "[", 
             RowBox[{"tlGraphs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                "}"}], "]"}], "/@", 
              RowBox[{"Rescale", "[", "vd", "]"}]}], ")"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeStyle", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"Delete", "[", 
             RowBox[{
              RowBox[{"EdgeList", "[", 
               RowBox[{"tlGraphs", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"Position", "[", 
                 RowBox[{
                  RowBox[{"EdgeList", "[", 
                   RowBox[{"tlGraphs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"highCentralityList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".005", "]"}], ",", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                    "}"}], "]"}], "[", "#", "]"}]}], "]"}], "&"}], "/@", 
              RowBox[{"Rescale", "[", 
               RowBox[{"Delete", "[", 
                RowBox[{"edgeweights", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"EdgeList", "[", 
                    RowBox[{"tlGraphs", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"highCentralityList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], ")"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tlGraphs4", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"HighlightGraph", "[", 
      RowBox[{
       RowBox[{"tlGraphs", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"highCentralityList", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tlGraphs5", "[", 
      RowBox[{"[", "i", "]"}], "]"}], "=", 
     RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tlGraphs", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexStyle", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"VertexList", "[", 
             RowBox[{"tlGraphs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                "}"}], "]"}], "/@", 
              RowBox[{"Rescale", "[", "vd", "]"}]}], ")"}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexCoordinates", "->", 
          RowBox[{"circle", "[", "20", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"EdgeStyle", "\[Rule]", 
          RowBox[{"Thread", "[", 
           RowBox[{
            RowBox[{"EdgeList", "[", 
             RowBox[{"tlGraphs", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Rule]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"Directive", "[", 
                RowBox[{
                 RowBox[{"Thickness", "[", ".005", "]"}], ",", 
                 RowBox[{
                  RowBox[{"ColorData", "[", 
                   RowBox[{"{", 
                    RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                    "}"}], "]"}], "[", "#", "]"}]}], "]"}], "&"}], "/@", 
              RowBox[{"Rescale", "[", "edgeweights", "]"}]}], ")"}]}], 
           "]"}]}]}], "\[IndentingNewLine]", "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "removes", " ", "the", " ", "edge", " ", "and", " ", "other", " ", 
      "necessary", " ", "stuff", " ", "tied", " ", "to", " ", "it", " ", 
      "from", " ", "relevant", " ", "lists"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"wcent", "=", 
     RowBox[{"Delete", "[", 
      RowBox[{"wcent", ",", 
       RowBox[{"pos", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"edges", "=", 
     RowBox[{"Delete", "[", 
      RowBox[{"edges", ",", 
       RowBox[{"pos", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"edgeweights", "=", 
     RowBox[{"Delete", "[", 
      RowBox[{"edgeweights", ",", 
       RowBox[{"pos", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]",
     "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "updates", " ", "g", " ", "with", " ", "the", " ", "new", " ", "graphs",
        " ", "as", " ", "edges", " ", "are", " ", "being", " ", 
       RowBox[{"removed", ".", "  ", "This"}], " ", "is", " ", "necessary"}], 
      ",", " ", 
      RowBox[{
      "as", " ", "g", " ", "is", " ", "used", " ", "to", " ", "calculate", 
       " ", "the", " ", "betweennesses", " ", "at", " ", "the", " ", 
       "beginning", " ", "of", " ", "every", " ", "loop"}]}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"g", "=", 
     RowBox[{"Graph", "[", 
      RowBox[{"vertices", ",", "edges", ",", 
       RowBox[{"EdgeWeight", "\[Rule]", "edgeweights"}], ",", 
       RowBox[{"EdgeShapeFunction", "\[Rule]", "shapeFunc"}], ",", 
       RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"VertexLabelStyle", "\[Rule]", "32"}]}], "]"}]}], ";", 
    RowBox[{"(*", " ", 
     RowBox[{
     "add", " ", "print", " ", "to", " ", "this", " ", "if", " ", "you", " ", 
      "want", " ", "to", " ", "see", " ", "the", " ", "timelapse", " ", 
      "graphs", " ", "of", " ", "the", " ", "network", " ", "dividing"}], " ",
      "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{
      "recalculates", " ", "the", " ", "betweenness", " ", "centralities", 
       " ", "for", " ", "the", " ", "now"}], "-", "one", "-", "edge", "-", 
      RowBox[{"smaller", " ", "graph"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"wcent", "=", 
     RowBox[{
      RowBox[{"EdgeBetweennessCentrality", "[", "g", "]"}], "/", 
      "edgeweights"}]}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.8333625505547256`*^9, 3.8333627046579275`*^9}, {
   3.833383508440468*^9, 3.8333835138425293`*^9}, {3.8333835967326226`*^9, 
   3.833383656762043*^9}, {3.833383942622898*^9, 3.8333839442368464`*^9}, {
   3.8333842940998273`*^9, 3.833384295335742*^9}, {3.8333843359550977`*^9, 
   3.8333843560083466`*^9}, {3.8333846586407785`*^9, 
   3.8333847867961836`*^9}, {3.833384892690609*^9, 3.8333849275542774`*^9}, {
   3.8333849710854306`*^9, 3.8333850399667826`*^9}, {3.8333850841723113`*^9, 
   3.833385124445587*^9}, {3.833385172977231*^9, 3.833385202815228*^9}, {
   3.8333852433885345`*^9, 3.8333852564356813`*^9}, {3.8333853264568453`*^9, 
   3.833385336909442*^9}, {3.833385375318102*^9, 3.83338542518717*^9}, {
   3.833385942882081*^9, 3.8333859941939707`*^9}, {3.833386263500945*^9, 
   3.8333863424350224`*^9}, {3.833386374767151*^9, 3.8333863935059795`*^9}, {
   3.83338642793614*^9, 3.833386440579341*^9}, 3.8333864744587793`*^9, {
   3.833386507919998*^9, 3.833386568085101*^9}, {3.833386694909486*^9, 
   3.8333867049731846`*^9}, {3.8333867407765665`*^9, 
   3.8333867629780226`*^9}, {3.833386851109965*^9, 3.8333868660195723`*^9}, {
   3.833387001761888*^9, 3.8333870621152377`*^9}, {3.833387109301096*^9, 
   3.833387146031557*^9}, {3.833387189116586*^9, 3.833387193240155*^9}, {
   3.8333902736175957`*^9, 3.8333903257886715`*^9}, {3.8333903599542065`*^9, 
   3.833390453780213*^9}, {3.8333906828244476`*^9, 3.833390691933987*^9}, {
   3.8334411109857097`*^9, 3.833441116908517*^9}, {3.8334411471116905`*^9, 
   3.833441148762991*^9}, {3.833444481127939*^9, 3.833444484425146*^9}, {
   3.8334449016949615`*^9, 3.8334449035021176`*^9}, {3.833891657116908*^9, 
   3.833891661550596*^9}, {3.834131126458065*^9, 3.834131150352219*^9}, {
   3.8341315417135377`*^9, 3.834131559986555*^9}, {3.8341315921059313`*^9, 
   3.8341316002739043`*^9}, {3.834131636399832*^9, 3.8341316438877735`*^9}, {
   3.834131676763323*^9, 3.834131708321842*^9}, {3.834131746621792*^9, 
   3.834131755437626*^9}, {3.834132203096616*^9, 3.8341322036555595`*^9}, {
   3.8341322889547305`*^9, 3.83413229000118*^9}, {3.8341323600899057`*^9, 
   3.8341323601870985`*^9}, {3.834778570357202*^9, 3.8347785717817607`*^9}, {
   3.834778709731979*^9, 3.834778709801412*^9}, {3.834778785568039*^9, 
   3.8347787860699415`*^9}, {3.8347789097763977`*^9, 
   3.8347789554512215`*^9}, {3.836824032731792*^9, 3.8368240552592773`*^9}, {
   3.836824087418996*^9, 3.8368242380030317`*^9}, {3.8368242727638674`*^9, 
   3.8368243722454224`*^9}, {3.8368244090038233`*^9, 
   3.8368244372231073`*^9}, {3.836824550852129*^9, 3.83682456075906*^9}, {
   3.836824595135722*^9, 3.83682459966159*^9}, {3.8368250632145777`*^9, 
   3.8368251015385523`*^9}, {3.836825407400659*^9, 3.836825407571764*^9}, {
   3.83693318387267*^9, 3.836933227364805*^9}, {3.8369332721953936`*^9, 
   3.8369333064674273`*^9}, {3.8369334783718452`*^9, 
   3.8369334912331734`*^9}, {3.836933535823641*^9, 3.836933612766017*^9}, {
   3.836933984966564*^9, 3.8369342539857173`*^9}, {3.836934301413825*^9, 
   3.8369343200521307`*^9}, {3.8369344355319204`*^9, 
   3.8369344370017357`*^9}, {3.8369346723043523`*^9, 
   3.8369347791514792`*^9}, {3.83693483911162*^9, 3.8369349843593493`*^9}, {
   3.836935025583691*^9, 3.8369353046866755`*^9}, {3.8369353627812705`*^9, 
   3.836935605827004*^9}, {3.8369356715532866`*^9, 3.836935671650503*^9}, {
   3.836935710435611*^9, 3.836935715873007*^9}, {3.8369358041652803`*^9, 
   3.8369358152595882`*^9}, {3.8369358570324125`*^9, 
   3.8369358691564884`*^9}, {3.8369359295541067`*^9, 
   3.8369360963051662`*^9}, {3.8369361315552826`*^9, 3.836936315511815*^9}, 
   3.8369363910913773`*^9, {3.8369364586190085`*^9, 3.8369365123901525`*^9}, {
   3.836936552596133*^9, 3.8369365701794367`*^9}, {3.836936646786911*^9, 
   3.8369368096935515`*^9}, {3.8369368490909796`*^9, 3.836936922308894*^9}, {
   3.8369374627562056`*^9, 3.836937534235422*^9}, {3.8369376669924917`*^9, 
   3.8369376679704647`*^9}, {3.8369378792632504`*^9, 3.836937934442706*^9}, 
   3.8369381515441*^9, {3.836938253685506*^9, 3.836938332615944*^9}, {
   3.836989636259259*^9, 3.8369897412411985`*^9}, 3.8369928155238304`*^9, 
   3.836993092711876*^9, {3.8375848509070654`*^9, 3.8375848777595196`*^9}, {
   3.8375849219027042`*^9, 3.837584925710062*^9}, {3.837584997044682*^9, 
   3.8375850064413996`*^9}, {3.837585151489251*^9, 3.837585164116156*^9}, {
   3.8375852764946365`*^9, 3.8375852788409214`*^9}, {3.837585322511342*^9, 
   3.8375853308456635`*^9}, {3.837585542924365*^9, 3.8375856084194727`*^9}, {
   3.8375856702013855`*^9, 3.8375856909086027`*^9}, {3.8375857276910343`*^9, 
   3.837585854579714*^9}, 3.837585887112853*^9, {3.8375859224356594`*^9, 
   3.837585944263179*^9}, {3.8375860691328363`*^9, 3.837586092940434*^9}, {
   3.8375865636436677`*^9, 3.837586574670287*^9}, {3.837586608331072*^9, 
   3.837586682131295*^9}, {3.837586731194849*^9, 3.8375868241996326`*^9}, {
   3.837586963251256*^9, 3.8375869652295446`*^9}, {3.837587239434668*^9, 
   3.8375873342786503`*^9}, {3.83758743580048*^9, 3.8375875329367886`*^9}, {
   3.837591661014511*^9, 3.8375916636996837`*^9}, {3.8375917242566442`*^9, 
   3.8375917493856535`*^9}, {3.8375922852663736`*^9, 
   3.8375922890368547`*^9}, {3.8387903999257326`*^9, 3.838790444584441*^9}, {
   3.8389043468446503`*^9, 3.8389044082376294`*^9}, 3.8389044491157446`*^9, {
   3.8389044827673845`*^9, 3.8389045323927555`*^9}, 3.8389060117623253`*^9, {
   3.83949179009219*^9, 3.8394917902886963`*^9}, {3.8394918884785457`*^9, 
   3.839492010847865*^9}, {3.839492060256321*^9, 3.8394920632893395`*^9}, {
   3.8394921118355002`*^9, 3.839492114040095*^9}, {3.839497090844858*^9, 
   3.8394970947849007`*^9}, {3.8394971592047515`*^9, 
   3.8394972052209115`*^9}, {3.839497263494915*^9, 3.8394972899865117`*^9}, {
   3.8394973683052835`*^9, 3.8394973969487734`*^9}, {3.8394974449662027`*^9, 
   3.839497451257095*^9}, {3.839497805601385*^9, 3.8394978314253182`*^9}, {
   3.8394982280862055`*^9, 3.8394982937227836`*^9}, 3.8394983763415504`*^9, {
   3.8395793493461723`*^9, 3.839579351033964*^9}, {3.8395794116698074`*^9, 
   3.8395794506162796`*^9}, {3.839579485982524*^9, 3.839579490002309*^9}, {
   3.839579537506291*^9, 3.839579558209597*^9}, {3.83958120262424*^9, 
   3.8395812031617565`*^9}, {3.839581234816226*^9, 3.8395812691090937`*^9}, 
   3.839581306792327*^9, {3.8395829926827536`*^9, 3.839583008496194*^9}, {
   3.839583069484277*^9, 3.839583116136751*^9}, {3.8395860315605545`*^9, 
   3.839586032220704*^9}, {3.8401032968188496`*^9, 3.8401033141192045`*^9}, {
   3.8401066439297743`*^9, 3.8401066458573856`*^9}, {3.8401068193475733`*^9, 
   3.840106820578051*^9}, {3.8443428253244157`*^9, 3.844342832032414*^9}, {
   3.8443428674068146`*^9, 3.8443428932519555`*^9}, 3.844342963528428*^9, {
   3.844343027093*^9, 3.844343288934623*^9}, {3.8443433459146347`*^9, 
   3.844343621541823*^9}, {3.8443436869452868`*^9, 3.84434372169481*^9}, {
   3.8443439112339892`*^9, 3.844344001471657*^9}, {3.844345537924347*^9, 
   3.844345556745438*^9}, {3.8443458932466145`*^9, 3.8443459419889283`*^9}, {
   3.844347177550876*^9, 3.8443471905435095`*^9}, {3.8443500702485514`*^9, 
   3.8443500917064915`*^9}, {3.8444236081022167`*^9, 
   3.8444236872092037`*^9}, {3.844423919775968*^9, 3.844423949142646*^9}, {
   3.844424064770257*^9, 3.8444240775503073`*^9}, {3.844768373336539*^9, 
   3.844768414330884*^9}, {3.8454648284511495`*^9, 3.845464834056295*^9}, {
   3.8454648944129124`*^9, 3.8454649233309364`*^9}, {3.8454649652742553`*^9, 
   3.8454649774826803`*^9}, {3.849264161542247*^9, 3.8492642388428183`*^9}, 
   3.8492642725301013`*^9, {3.849264323191922*^9, 3.849264334591941*^9}, {
   3.849264803110347*^9, 3.849264841988673*^9}, {3.8492651625106583`*^9, 
   3.8492651628414907`*^9}, {3.8492654061089945`*^9, 
   3.8492654078558397`*^9}, {3.8492655243338394`*^9, 
   3.8492655512271843`*^9}, {3.8492656104944715`*^9, 
   3.8492656151440477`*^9}, {3.8492656856024895`*^9, 3.8492658091486936`*^9}, 
   {3.849265891087031*^9, 3.8492659003173103`*^9}, {3.8492659870545692`*^9, 
   3.8492659901063023`*^9}, {3.84926624688125*^9, 3.8492662474560366`*^9}, 
   3.849266327618949*^9, {3.849266497811095*^9, 3.849266508840516*^9}, {
   3.8492665456193027`*^9, 3.84926654594766*^9}, {3.8492667077013597`*^9, 
   3.849266752000347*^9}, {3.849266872786806*^9, 3.8492668805150113`*^9}, {
   3.849267029040271*^9, 3.849267057429557*^9}, {3.8492672776970005`*^9, 
   3.8492672970378914`*^9}, {3.849267344622391*^9, 3.849267393382908*^9}, {
   3.849267428316951*^9, 3.849267458711862*^9}, {3.849267497041853*^9, 
   3.8492675166122637`*^9}, {3.8492676601358843`*^9, 3.849267709002104*^9}, {
   3.849268123437138*^9, 3.8492681766609826`*^9}, {3.8492682601395907`*^9, 
   3.8492682643294764`*^9}, {3.849268409165329*^9, 3.8492684300085745`*^9}, {
   3.849268722136135*^9, 3.849268747393334*^9}, {3.84926882440353*^9, 
   3.849268896793173*^9}, {3.8492689543435793`*^9, 3.849268958652524*^9}, {
   3.849269027061901*^9, 3.8492690969358225`*^9}, {3.8492691330323086`*^9, 
   3.849269133911434*^9}, {3.8492691853252163`*^9, 3.849269392455041*^9}, {
   3.849269504152285*^9, 3.8492695915444717`*^9}, {3.849269641897938*^9, 
   3.849269654630788*^9}, {3.849865949397558*^9, 3.849865956983862*^9}, {
   3.851680624799374*^9, 3.8516806619042053`*^9}, {3.851681404064305*^9, 
   3.851681489488497*^9}, {3.8516815689319167`*^9, 3.8516816427270956`*^9}, {
   3.851681678399494*^9, 3.8516816924308643`*^9}, {3.8516817871991963`*^9, 
   3.851681789384883*^9}, {3.851681832252103*^9, 3.851681890519699*^9}, {
   3.851684310374487*^9, 3.851684317891616*^9}, {3.851686756633613*^9, 
   3.8516867574374495`*^9}, 3.8516883343665195`*^9, {3.853922226450183*^9, 
   3.853922236272439*^9}, {3.8539241670973372`*^9, 3.8539241742827196`*^9}, {
   3.8643713045556326`*^9, 3.864371309307428*^9}, {3.8719318746152544`*^9, 
   3.8719319684762964`*^9}, {3.874743307758486*^9, 3.874743447581026*^9}, {
   3.8747434964246254`*^9, 3.8747435484306316`*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"ea51977b-756d-4f3b-9354-ff76caba3369"]
}, Closed]],

Cell[CellGroupData[{

Cell["2 Community Detection Animation", "Section",
 CellChangeTimes->{{3.8443473037191067`*^9, 3.8443473611613274`*^9}, {
  3.8444240967063155`*^9, 
  3.844424096803322*^9}},ExpressionUUID->"2706926d-6bda-419a-922e-\
503e2c4e0eb5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ListAnimate", "[", 
    RowBox[{"tlGraphs", ",", "1", ",", 
     RowBox[{"ImageSize", "\[Rule]", "Automatic"}]}], "]"}], ";"}], "  ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "shows", " ", "the", " ", "evolution", " ", "of", " ", "the", " ", 
    "betweenness", " ", "centrality", " ", "splitting", " ", "the", " ", 
    "network"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListAnimate", "[", 
   RowBox[{"tlGraphs1", ",", "1", ",", 
    RowBox[{"ImageSize", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListAnimate", "[", 
   RowBox[{"tlGraphs2", ",", "1", ",", 
    RowBox[{"ImageSize", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListAnimate", "[", 
   RowBox[{"tlGraphs3", ",", "1", ",", 
    RowBox[{"ImageSize", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListAnimate", "[", 
   RowBox[{"tlGraphs4", ",", "1", ",", 
    RowBox[{"ImageSize", "\[Rule]", "All"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8443473643277884`*^9, 3.8443473856333275`*^9}, {
   3.844349938890669*^9, 3.8443499760437098`*^9}, {3.8444238416956005`*^9, 
   3.844423870304946*^9}, {3.8444241117525916`*^9, 3.8444241139356008`*^9}, {
   3.844424691438878*^9, 3.844424713902463*^9}, {3.84442479558735*^9, 
   3.8444248009629793`*^9}, {3.8492694053852434`*^9, 
   3.8492694138965607`*^9}, {3.849269663522928*^9, 3.849269675497389*^9}, {
   3.8492697194788523`*^9, 3.849269727329783*^9}, {3.8498659854203234`*^9, 
   3.849865989582182*^9}, {3.851678559804224*^9, 3.8516785607872066`*^9}, {
   3.851678782997476*^9, 3.8516787842486534`*^9}, {3.8516799715863934`*^9, 
   3.8516799779308643`*^9}, 3.851680012329571*^9, {3.851681501083351*^9, 
   3.851681509326056*^9}, {3.851686761436499*^9, 3.8516867641214123`*^9}, 
   3.8644600989081774`*^9, 3.864472596008328*^9, 3.8644726377828336`*^9},
 CellLabel->
  "In[1514]:=",ExpressionUUID->"78834e8c-a30e-4346-801f-f8ba693c1d83"]
}, Closed]],

Cell[CellGroupData[{

Cell["3 Dendrogram", "Section",
 CellChangeTimes->{{3.844347249369022*^9, 3.8443472579524574`*^9}, {
  3.8444240992614703`*^9, 
  3.8444240993368783`*^9}},ExpressionUUID->"90c4215d-c825-4178-b950-\
760ce9a55111"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ConnectedGraphComponents", "[", 
   RowBox[{"tlGraphs3", "[", 
    RowBox[{"[", "150", "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"ConnectedGraphComponents", "[", 
     RowBox[{"tlGraphs3", "[", 
      RowBox[{"[", "150", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "initializes", " ", "nComm", " ", "as", " ", "the", " ", "number", " ", 
     "of", " ", "disconnected", " ", "subgraphs", " ", "in", " ", "the", " ", 
     "original"}], ",", " ", 
    RowBox[{"full", " ", 
     RowBox[{"network", ".", "  ", "This"}], " ", "will", " ", "be", " ", 
     "updated", " ", "in", " ", "the", " ", "loop", " ", "to", " ", "always", 
     " ", "be", " ", "the", " ", "current", " ", "number", " ", "of", " ", 
     "disconnected", " ", "subgraphs"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nComm", "=", 
    RowBox[{"Length", "@", 
     RowBox[{"ConnectedGraphComponents", "[", 
      RowBox[{"tlGraphs3", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"redundant", "--"}], "I", " ", "had", " ", "forgotten", " ", 
    "that", " ", "\"\<num\>\"", " ", "was", " ", "already", " ", "used", " ", 
    "earlier", " ", "for", " ", "the", " ", "number", " ", "of", " ", 
    "edges"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nEdges", "=", 
    RowBox[{"EdgeCount", "[", 
     RowBox[{"tlGraphs3", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "initializes", " ", "splits", " ", "as", " ", "an", " ", "empty", " ", 
    "list"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"splits", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "goes", " ", "through", " ", "the", " ", "list", " ", "of", " ", "graphs",
      " ", "as", " ", "edges", " ", "are", " ", "removed"}], ",", " ", 
    RowBox[{
    "and", " ", "adds", " ", "the", " ", "total", " ", "number", " ", "of", 
     " ", "removed", " ", "edges", " ", "at", " ", "the", " ", "point", " ", 
     "when", " ", "a", " ", "subgraph", " ", "divides", " ", "to", " ", "the",
      " ", "\"\<splits\>\"", " ", 
     RowBox[{"list", ".", "  ", "This"}], " ", "allows", " ", "us", " ", "to",
      " ", "keep", " ", "track", " ", "of", " ", "when", " ", "the", " ", 
     "splits", " ", "in", " ", "the", " ", "network", " ", "occur"}], ",", 
    " ", 
    RowBox[{
    "so", " ", "we", " ", "can", " ", "more", " ", "easily", " ", "identify", 
     " ", "what", " ", "spit", " ", "off", " ", "from", " ", "where"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "when", " ", "that", " ", "division", " ", "occurs"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", "nEdges"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "nComm"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nComm", "=", 
      RowBox[{"Length", "@", 
       RowBox[{"ConnectedGraphComponents", "[", 
        RowBox[{"tlGraphs3", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"j", "!=", "nComm"}], ",", "\[IndentingNewLine]", 
       RowBox[{"splits", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"splits", ",", "i"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "initializes", " ", "splitGraphs", " ", "as", " ", "an", " ", "empty", 
     " ", "list"}], ",", " ", 
    RowBox[{
    "to", " ", "be", " ", "filled", " ", "with", " ", "the", " ", "graphs", 
     " ", "*", "right", " ", "before", "*", " ", "being", " ", "divided"}]}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"splitGraphs", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"splitNumGraphs", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "goes", " ", "through", " ", "and", " ", "fills", " ", "splitGraphs", " ",
      "with", " ", "snapshots", " ", "of", " ", "the", " ", "network"}], ",", 
    " ", 
    RowBox[{
    "right", " ", "before", " ", "each", " ", "split", " ", "occurs"}]}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"Length", "@", "splits"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"splitGraphs", "=", 
      RowBox[{"Append", "[", "\[IndentingNewLine]", 
       RowBox[{"splitGraphs", ",", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"because", " ", 
            RowBox[{"we", "'"}], "re", " ", "using", " ", "tlGraphs3"}], ",", 
           " ", 
           RowBox[{"AND", " ", 
            RowBox[{"we", "'"}], "re", " ", "looking", " ", "at", " ", "the", 
            " ", "networks", " ", "one", " ", "step", " ", "before", " ", 
            "they", " ", "are", " ", "divided"}], ",", " ", 
           RowBox[{
           "we", " ", "can", " ", "see", " ", "the", " ", "edge", " ", "that",
             " ", "will", " ", "be", " ", "removed", " ", "in", " ", "that", 
            " ", "step", " ", 
            RowBox[{"(", 
             RowBox[{
             "they", " ", "are", " ", "highlighted", " ", "in", " ", 
              "tlGraphs3"}], ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tlGraphs3", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"splits", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Text", "[", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"splits", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], "]"}], ",", 
              RowBox[{"FontSize", "->", "50"}], ",", "Bold"}], "]"}], "]"}], 
           "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"splitNumGraphs", "=", 
      RowBox[{"Append", "[", "\[IndentingNewLine]", 
       RowBox[{"splitNumGraphs", ",", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"because", " ", 
            RowBox[{"we", "'"}], "re", " ", "using", " ", "tlGraphs3"}], ",", 
           " ", 
           RowBox[{"AND", " ", 
            RowBox[{"we", "'"}], "re", " ", "looking", " ", "at", " ", "the", 
            " ", "networks", " ", "one", " ", "step", " ", "before", " ", 
            "they", " ", "are", " ", "divided"}], ",", " ", 
           RowBox[{
           "we", " ", "can", " ", "see", " ", "the", " ", "edge", " ", "that",
             " ", "will", " ", "be", " ", "removed", " ", "in", " ", "that", 
            " ", "step", " ", 
            RowBox[{"(", 
             RowBox[{
             "they", " ", "are", " ", "highlighted", " ", "in", " ", 
              "tlGraphs3"}], ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tlGraphs3", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"splits", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Text", "[", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "i", "]"}], ",", 
              RowBox[{"FontSize", "->", "30"}], ",", "Bold"}], "]"}], "]"}], 
           "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "required", " ", "to", " ", "have", " ", "a", " ", "vertex", " ", "for", 
     " ", "each", " ", "division", " ", "point", " ", "of", " ", "the", " ", 
     "graph", " ", 
     RowBox[{"(", "nineteen", ")"}]}], ",", " ", 
    RowBox[{"as", " ", "well", " ", "as", " ", "each", " ", "expression"}]}], 
   " ", "*)"}], 
  RowBox[{
   RowBox[{"treeVerts", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\"", ",", 
      "\"\<5\>\"", ",", "\"\<6\>\"", ",", "\"\<7\>\"", ",", "\"\<8\>\"", ",", 
      "\"\<9\>\"", ",", "\"\<10\>\"", ",", "\"\<11\>\"", ",", "\"\<12\>\"", 
      ",", "\"\<13\>\"", ",", "\"\<14\>\"", ",", "\"\<15\>\"", ",", 
      "\"\<16\>\"", ",", "\"\<17\>\"", ",", "\"\<18\>\"", ",", "\"\<19\>\"", 
      ",", 
      RowBox[{"OverVector", "[", "\"\<v\>\"", "]"}], ",", 
      RowBox[{"OverHat", "[", "\"\<j\>\"", "]"}], ",", 
      RowBox[{
      "OverHat", "[", "\"\<\!\(\*SubscriptBox[\(S\), \(z\)]\)\>\"", "]"}], 
      ",", "\"\<f(x)\>\"", ",", 
      "\"\<\[VerticalSeparator]\[Psi]\[RightAngleBracket]\>\"", ",", 
      "\"\<\[VerticalSeparator]\!\(\*SubscriptBox[\(E\), \(2\)]\)\
\[RightAngleBracket]\>\"", ",", 
      "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \(1\)]\)\
\[VerticalSeparator]\>\"", ",", "\"\<\[Psi](x)\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)(x)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(3\)]\)(x)\>\"", ",", 
      "\"\<\!\(\*SubsuperscriptBox[\(\[CurlyPhi]\), \(4\), \(*\)]\)(x)\>\"", 
      ",", 
      RowBox[{
       RowBox[{"OverVector", "[", "\"\<u\>\"", "]"}], "\[CenterDot]", 
       RowBox[{"OverVector", "[", "\"\<v\>\"", "]"}]}], ",", 
      "\"\<\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\[Psi]\
\[RightAngleBracket]\>\"", ",", 
      "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \(3\)]\)\
\[VerticalSeparator]\[Psi]\[RightAngleBracket]\>\"", ",", 
      "\"\<\[Integral]\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)\[Psi]dx\>\"", 
      ",", "\"\<\[Integral]\!\(\*SubsuperscriptBox[\(\[CurlyPhi]\), \(1\), \
\(*\)]\)\[Psi]dx\>\"", ",", 
      "\"\<\[VerticalSeparator]\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \
\(4\)]\)\[VerticalSeparator]\[Psi]\[RightAngleBracket]\!\(\*SuperscriptBox[\(\
\[VerticalSeparator]\), \(2\)]\)\>\"", ",", 
      "\"\<\[VerticalSeparator]\[Integral]\!\(\*SuperscriptBox[\(\[Psi]\), \
\(*\)]\)\[Psi]dx\!\(\*SuperscriptBox[\(\[VerticalSeparator]\), \(2\)]\)\>\"", 
      ",", "\"\<\[VerticalSeparator]\[Integral]\!\(\*SubsuperscriptBox[\(\
\[CurlyPhi]\), \(2\), \(*\)]\)\[Psi]dx\!\(\*SuperscriptBox[\(\
\[VerticalSeparator]\), \(2\)]\)\>\"", ",", 
      "\"\<\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\>\"", ",", 
      "\"\<0\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "NEED", " ", "TO", " ", "GO", " ", "THROUGH", " ", "THE", " ", "TREEEDGES",
     " ", "AND", " ", "FILL", " ", "IN", " ", "THE", " ", "CORRECT", " ", 
    "LINKS", " ", "FROM", " ", "THE", " ", "UPDATED", " ", "DENDROGRAM"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"unfortunately", ",", " ", 
    RowBox[{
    "this", " ", "is", " ", "required", " ", "to", " ", "be", " ", "filled", 
     " ", "out", " ", "manually"}], ",", " ", 
    RowBox[{
    "by", " ", "creating", " ", "the", " ", "dendrogram", " ", "on", " ", 
     "paper"}], ",", " ", 
    RowBox[{
    "and", " ", "noting", " ", "when", " ", "and", " ", "where", " ", "each", 
     " ", "division", " ", "takes", " ", 
     RowBox[{"place", ".", "  ", "Not"}], " ", 
     RowBox[{"fun", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"treeEdges", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "40", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "23", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "16", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "22", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "10", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "31", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "21", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "20", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "12", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "13", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "19", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "10", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "28", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "10", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "11", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "11", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "30", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "11", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "15", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "12", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "39", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "12", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "14", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "13", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "34", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "13", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "35", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "14", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "24", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "14", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "18", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "15", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "27", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "15", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "29", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "16", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "37", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "16", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "17", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "17", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "36", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "17", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "38", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "18", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "25", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "18", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "26", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "19", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "33", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "19", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "32", "]"}], "]"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "defines", " ", "the", " ", "weights", " ", "of", " ", "the", " ", 
     "vertices", " ", 
     RowBox[{"(", 
      RowBox[{
      "which", " ", "Mathematica", " ", "uses", " ", "as", " ", "the", " ", 
       "\"\<heights\>\"", " ", "of", " ", "the", " ", "division", " ", 
       "points", " ", "when", " ", "the", " ", "tree", " ", "graph", " ", 
       "is", " ", "converted", " ", "to", " ", "a", " ", "dendrogram"}], 
      ")"}], "  ", "The"}], " ", "+", 
    RowBox[{
    "1", " ", "is", " ", "required", " ", "because", " ", "\"\<splits\>\"", 
     " ", 
     RowBox[{"doesn", "'"}], "t", " ", "include", " ", "the", " ", "final", 
     " ", "division", " ", 
     RowBox[{"(", 
      RowBox[{"for", " ", "some", " ", "reason"}], ")"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heightStagger", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"nEdges", "+", "1", "-", "splits"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "12"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "12"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "12"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "12"}], ",", 
       RowBox[{"-", "12"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "12"}], ",", 
       RowBox[{"-", "12"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "12"}], ",", 
       RowBox[{"-", "12"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "12"}], ",", "nEdges"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"heightFlat", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"nEdges", "+", "1", "-", "splits"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "numVerts"}], "]"}], ",", 
      RowBox[{"{", "nEdges", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TownsendTreeStagger", "=", 
   RowBox[{"TreeGraph", "[", 
    RowBox[{"treeVerts", ",", "treeEdges", ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"VertexWeight", "\[Rule]", "heightStagger"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TownsendTreeFlat", "=", 
    RowBox[{"TreeGraph", "[", 
     RowBox[{"treeVerts", ",", "treeEdges", ",", 
      RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
      RowBox[{"VertexWeight", "\[Rule]", "heightFlat"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dendrogram", "[", "TownsendTreeStagger", "]"}], "/.", 
   RowBox[{
    RowBox[{"Line", "[", "x_", "]"}], ":>", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
      RowBox[{"Line", "[", "x", "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Dendrogram", "[", "TownsendTreeFlat", "]"}], "/.", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
       RowBox[{"Line", "[", "x", "]"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dendrogram", "[", 
    RowBox[{"TownsendTreeStagger", ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{"Line", "[", "x_", "]"}], ":>", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", "x", "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"splitGraphs", "//", "MatrixForm"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.844347274500242*^9, {3.851679055475422*^9, 3.851679201191157*^9}, {
   3.851679243462654*^9, 3.851679489191659*^9}, {3.851679525800012*^9, 
   3.851679580105005*^9}, {3.851679610503461*^9, 3.8516796888360357`*^9}, {
   3.8516798142752504`*^9, 3.8516798625550313`*^9}, {3.8516799057126074`*^9, 
   3.851679942420415*^9}, 3.851680053487069*^9, {3.8516800956027503`*^9, 
   3.8516802750066476`*^9}, {3.851680376137401*^9, 3.8516803880380697`*^9}, 
   3.851680426899479*^9, {3.8516804713269076`*^9, 3.8516805246432695`*^9}, {
   3.851680596614419*^9, 3.851680598083376*^9}, {3.851680687543083*^9, 
   3.851680687949547*^9}, {3.851680757230997*^9, 3.8516807576080155`*^9}, {
   3.8516807905690837`*^9, 3.8516808077027407`*^9}, {3.8516808583621*^9, 
   3.8516810095799294`*^9}, {3.851681108347003*^9, 3.8516812143822093`*^9}, {
   3.8516812906194825`*^9, 3.8516812908391705`*^9}, 3.8516816264323406`*^9, {
   3.8516888621371117`*^9, 3.8516888657486563`*^9}, {3.851689012856203*^9, 
   3.851689024482353*^9}, {3.8516890648754473`*^9, 3.85168906820074*^9}, {
   3.8516891095593605`*^9, 3.8516891552296124`*^9}, {3.8516909156612167`*^9, 
   3.8516909595360765`*^9}, 3.8516910063082137`*^9, {3.8516910404495053`*^9, 
   3.851691049612878*^9}, {3.851691221216292*^9, 3.8516918463561306`*^9}, {
   3.851691889617649*^9, 3.851691901706191*^9}, {3.8516919512632046`*^9, 
   3.851691982373977*^9}, {3.8516920153362737`*^9, 3.851692136617408*^9}, {
   3.8516922195324445`*^9, 3.8516922342088366`*^9}, {3.8516922744736433`*^9, 
   3.851692281565303*^9}, {3.8516923421864395`*^9, 3.851692379421156*^9}, {
   3.851692792778734*^9, 3.8516928975808225`*^9}, {3.8516929567539883`*^9, 
   3.851692961912306*^9}, {3.851694043454239*^9, 3.851694110493267*^9}, {
   3.8516944344147587`*^9, 3.8516944800673995`*^9}, {3.851694597018551*^9, 
   3.8516946034985323`*^9}, {3.851694638914996*^9, 3.8516946569222603`*^9}, {
   3.851694692998432*^9, 3.8516947322851763`*^9}, {3.851694800138423*^9, 
   3.8516952704164033`*^9}, {3.851695306154913*^9, 3.8516954978827267`*^9}, {
   3.851695530122992*^9, 3.851695556437873*^9}, {3.8516956024873676`*^9, 
   3.8516956045186434`*^9}, {3.8516956405802326`*^9, 
   3.8516956888547325`*^9}, {3.8516957224676886`*^9, 3.851695829690275*^9}, {
   3.851696009750741*^9, 3.8516960098600883`*^9}, {3.8516960583754272`*^9, 
   3.851696069709174*^9}, {3.8516961329802847`*^9, 3.8516961943104243`*^9}, {
   3.8516962243108015`*^9, 3.8516962244356995`*^9}, 3.8516962806075335`*^9, {
   3.851696321999322*^9, 3.851696381944967*^9}, {3.851696443963007*^9, 
   3.8516964453283253`*^9}, {3.8517649451504726`*^9, 
   3.8517649598219934`*^9}, {3.851771095350855*^9, 3.8517711397392445`*^9}, {
   3.851771437929451*^9, 3.851771445837859*^9}, {3.852111603369418*^9, 
   3.852111633547926*^9}, {3.852191116567623*^9, 3.8521911346678815`*^9}, {
   3.852191292459958*^9, 3.8521914014114923`*^9}, 3.8521914738678007`*^9, {
   3.8521915138034706`*^9, 3.8521915750209584`*^9}, {3.852191621681364*^9, 
   3.852191624191429*^9}, {3.8523685985356727`*^9, 3.8523686020476933`*^9}, {
   3.8523717868880644`*^9, 3.8523717933352714`*^9}, {3.8523718252324147`*^9, 
   3.852371892977396*^9}, {3.852372051564866*^9, 3.852372064778593*^9}, {
   3.85237212967048*^9, 3.852372162552309*^9}, {3.852372197114501*^9, 
   3.852372212498358*^9}, {3.8523722531666384`*^9, 3.852372262354499*^9}, 
   3.852373034600109*^9, 3.8527409536619253`*^9, 3.852803657658196*^9, {
   3.8535036313584895`*^9, 3.8535036580653057`*^9}, {3.8535729122547507`*^9, 
   3.853573053761318*^9}, {3.8535731127896814`*^9, 3.8535731196646976`*^9}, {
   3.853573200513361*^9, 3.853573205805282*^9}, {3.853922366632385*^9, 
   3.853922377847296*^9}, {3.853922780026539*^9, 3.8539228662172365`*^9}, {
   3.853924191659105*^9, 3.8539242101873155`*^9}, 3.8539244406105804`*^9, 
   3.853925359813018*^9, {3.8539254659381857`*^9, 3.8539257355099115`*^9}, {
   3.853925805146599*^9, 3.853925850547482*^9}, {3.853925975052086*^9, 
   3.853925992573661*^9}, {3.85401062718443*^9, 3.854010637348673*^9}, {
   3.854012122025961*^9, 3.854012123349902*^9}, {3.8540121587581425`*^9, 
   3.8540121589291887`*^9}, {3.8643723994754715`*^9, 3.864372399978871*^9}, {
   3.864373196147086*^9, 3.8643733801274357`*^9}, {3.864374082260276*^9, 
   3.8643741069928184`*^9}},
 CellLabel->
  "In[1088]:=",ExpressionUUID->"74e417b5-e88f-49cb-a4fc-6b32af2df3a6"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.65], 
    {Thickness[0.004], 
     LineBox[{{{192.3046875, 71.}, {192.3046875, 176.}}, {{192.3046875, 
       176.}, {192.3046875, 176.}}, {{54.609375, 68.}, {54.609375, 71.}}, {{
       330., 53.}, {330., 71.}}, {{54.609375, 71.}, {330., 71.}}, {{
       20, -12}, {20, 68}}, {{89.21875, 43.}, {89.21875, 
       68.}}, {{20, 68}, {89.21875, 68.}}, {{285., 30.}, {285., 53.}}, {{375.,
        3.}, {375., 53.}}, {{285., 53.}, {375., 53.}}, {{40, -2}, {40, 
       43}}, {{138.4375, 34.}, {138.4375, 
       43.}}, {{40, 43}, {138.4375, 43.}}, {{79.375, 25.}, {79.375, 34.}}, {{
       197.5, 14.}, {197.5, 34.}}, {{79.375, 34.}, {197.5, 34.}}, {{
       260, -12}, {260, 30}}, {{310., 17.}, {310., 
       30.}}, {{260, 30}, {310., 30.}}, {{60, -12}, {60, 25}}, {{98.75, 
       21.}, {98.75, 25.}}, {{60, 25}, {98.75, 25.}}, {{80, -2}, {80, 21}}, {{
       117.5, 9.}, {117.5, 21.}}, {{80, 21}, {117.5, 21.}}, {{290., 8.}, {
       290., 17.}}, {{330., 0.}, {330., 17.}}, {{290., 17.}, {330., 17.}}, {{
       180, -12}, {180, 14}}, {{215., 12.}, {215., 
       14.}}, {{180, 14}, {215., 14.}}, {{200, -2}, {200, 12}}, {{230., 5.}, {
       230., 12.}}, {{200, 12}, {230., 12.}}, {{100, -12}, {100, 9}}, {{135., 
       6.}, {135., 9.}}, {{100, 9}, {135., 9.}}, {{280, -2}, {280, 8}}, {{
       300, -12}, {300, 8}}, {{280, 8}, {300, 8}}, {{120, -2}, {120, 6}}, {{
       150., 1.}, {150., 6.}}, {{120, 6}, {150., 6.}}, {{220, -12}, {220, 
       5}}, {{240, -2}, {240, 5}}, {{220, 5}, {240, 5}}, {{360, -2}, {360, 
       3}}, {{390., 2.}, {390., 3.}}, {{360, 3}, {390., 3.}}, {{380, -12}, {
       380, 2}}, {{400, -2}, {400, 2}}, {{380, 2}, {400, 2}}, {{140, -12}, {
       140, 1}}, {{160, -2}, {160, 1}}, {{140, 1}, {160, 1}}, {{320, -2}, {
       320, 0}}, {{340, -12}, {340, 0}}, {{320, 0}, {340, 0}}}]}}, InsetBox[
    FrameBox[
     TagBox["\<\"f(x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {20, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      OverscriptBox["\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(z\\)]\\)\"\>", "^"],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {40, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      OverscriptBox["\<\"j\"\>", "^"],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {60, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      OverscriptBox["\<\"v\"\>", "\[RightVector]"],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {80, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {100, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\[Psi]\[RightAngleBracket]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {120, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\\!\\(\\*SubscriptBox[\\(E\\), \
\\(2\\)]\\)\[RightAngleBracket]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {140, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(E\\), \
\\(1\\)]\\)\[VerticalSeparator]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {160, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(\[Psi]\\), \\(*\\)]\\)(x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {180, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(\[CurlyPhi]\\), \\(4\\), \
\\(*\\)]\\)(x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {200, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[Psi](x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {220, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(3\\)]\\)(x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {240, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      RowBox[{
       OverscriptBox["\<\"u\"\>", "\[RightVector]"], "\[CenterDot]", 
       OverscriptBox["\<\"v\"\>", "\[RightVector]"]}],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {260, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[Integral]\\!\\(\\*SuperscriptBox[\\(\[Psi]\\), \\(*\\)]\\)\
\[Psi]dx\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {280, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[Integral]\\!\\(\\*SubsuperscriptBox[\\(\[CurlyPhi]\\), \
\\(1\\), \\(*\\)]\\)\[Psi]dx\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {300, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(E\\), \
\\(3\\)]\\)\[VerticalSeparator]\[Psi]\[RightAngleBracket]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {320, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\[Psi]\
\[RightAngleBracket]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {340, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\[Integral]\\!\\(\\*SuperscriptBox[\\(\
\[Psi]\\), \\(*\\)]\\)\[Psi]dx\\!\\(\\*SuperscriptBox[\\(\[VerticalSeparator]\
\\), \\(2\\)]\\)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {360, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\
\\(E\\), \\(4\\)]\\)\[VerticalSeparator]\[Psi]\[RightAngleBracket]\\!\\(\\*\
SuperscriptBox[\\(\[VerticalSeparator]\\), \\(2\\)]\\)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {380, -12}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\[Integral]\\!\\(\\*SubsuperscriptBox[\\(\
\[CurlyPhi]\\), \\(2\\), \\(*\\)]\\)\[Psi]dx\\!\\(\\*SuperscriptBox[\\(\
\[VerticalSeparator]\\), \\(2\\)]\\)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {400, -2}, Scaled[{0.5, 1}]]},
  AlignmentPoint->Center,
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->{956.75, Automatic},
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{
  3.852740959123103*^9, 3.852803661040284*^9, 3.8535004478735204`*^9, {
   3.853573100858674*^9, 3.853573122300424*^9}, 3.853573208610425*^9, 
   3.8539223149196777`*^9, 3.853922385269178*^9, {3.85392279206332*^9, 
   3.8539228476331615`*^9}, {3.853924429597229*^9, 3.8539244434285917`*^9}, 
   3.853925364590626*^9, {3.85392572043985*^9, 3.8539257386393185`*^9}, 
   3.853925807680827*^9, 3.853925854652012*^9, {3.8539259792166967`*^9, 
   3.853925996440568*^9}, 3.854010704260516*^9, 3.8540121663927298`*^9, 
   3.86437136094049*^9, 3.8643725479947915`*^9, 3.8643733967744493`*^9, {
   3.8643740856780233`*^9, 3.8643741099953117`*^9}, 3.8644598010867453`*^9},
 CellLabel->
  "Out[1105]=",ExpressionUUID->"e96b8e87-9647-4165-881c-5d13e8d90c91"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["4 Cophenetics", "Section",
 CellChangeTimes->{{3.852372964361682*^9, 
  3.8523729681299644`*^9}},ExpressionUUID->"3f340995-78bb-461d-9c13-\
84fae0957ef8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "this", " ", "section", " ", "will", " ", "find", " ", "the", " ", 
    "cophenetic", " ", "distance", " ", "between", " ", "every", " ", 
    "expression", " ", "in", " ", "dendrogram"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "the", " ", "cophenetic", " ", "distance", " ", "is", " ", "the", " ", 
    "height", " ", "on", " ", "a", " ", "dendrogram", " ", "at", " ", "which",
     " ", "two", " ", "elements", " ", "were", " ", "last", " ", "part", " ", 
    "of", " ", "the", " ", "same", " ", "cluster"}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "we", " ", "will", " ", "determine", " ", "the", " ", "cophenetic", " ", 
     "distances", " ", "by", " ", "first", " ", "assigning", " ", "weights", 
     " ", "to", " ", "the", " ", 
     RowBox[{"treegraph", "'"}], "s", " ", "edges", " ", "equal", " ", "to", 
     " ", "the", " ", "number", " ", "of", " ", "steps", " ", "they", " ", 
     RowBox[{"represent", ".", "  ", "This"}], " ", "will", " ", "be", " ", 
     "done", " ", "by", " ", "taking", " ", "the", " ", "difference", " ", 
     "between", " ", "the", " ", "weights", " ", "of", " ", "the", " ", 
     "vertices", " ", "on", " ", "either", " ", "end", " ", "of", " ", "the", 
     " ", 
     RowBox[{"edge", ".", "  ", "Once"}], " ", "we", " ", "have", " ", "a", 
     " ", "treegraph", " ", "where", " ", "the", " ", "edgeweights", " ", 
     "correspond", " ", "to", " ", "the", " ", "number", " ", "of", " ", 
     "steps", " ", "between", " ", "the", " ", "vertices"}], ",", " ", 
    RowBox[{
    "we", " ", "will", " ", "then", " ", "add", " ", "up", " ", "all", " ", 
     "of", " ", "the", " ", "weights", " ", "along", " ", "the", " ", "path", 
     " ", "between", " ", "two", " ", "expression", " ", 
     RowBox[{"vertices", ".", "  ", "This"}], " ", "should", " ", 
     "effectively", " ", "be", " ", "equal", " ", "to", " ", "double", " ", 
     "the", " ", "cophenetic", " ", "distance", " ", "between", " ", "those", 
     " ", "two", " ", 
     RowBox[{"vertices", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"numTreeVerts", "=", " ", 
     RowBox[{"Length", "[", 
      RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindShortestPath", "[", 
     RowBox[{"TownsendTreeFlat", ",", 
      RowBox[{
       RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
       RowBox[{"[", "27", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
       RowBox[{"[", "20", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{"TownsendTreeFlat", ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"first", ",", " ", 
     RowBox[{
     "define", " ", "the", " ", "vertex", " ", "weights", " ", "as", " ", 
      "above"}], ",", " ", 
     RowBox[{"but", " ", "setting", " ", "the", " ", 
      RowBox[{"expressions", "'"}], " ", "vertex", " ", "weights", " ", "to", 
      " ", "negative", " ", "one"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cophenVertexWeights", "=", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"nEdges", "+", "1", "-", "splits"}], ",", 
       RowBox[{"{", "0", "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"-", "1"}], ",", "numVerts"}], "]"}], ",", 
       RowBox[{"{", "nEdges", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "initialize", " ", "the", " ", "matrix", " ", "that", " ", "will", " ", 
     "be", " ", "filled", " ", "with", " ", "the", " ", 
     RowBox[{"edgeweights", ".", "  ", "It"}], " ", "will", " ", "be", " ", 
     "zero", " ", "if", " ", "they", " ", 
     RowBox[{"don", "'"}], "t", " ", "connect", " ", 
     RowBox[{"directly", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cophenEdgeWeights", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "numTreeVerts", ",", "numTreeVerts"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "here", " ", "we", " ", "fill", " ", "in", " ", "the", " ", 
      "cophenEdgeWeights", " ", "matrix", " ", "with", " ", "the", " ", 
      "number", " ", "of", " ", "steps", " ", "between", " ", "the", " ", 
      "different", " ", "vertices", " ", "on", " ", "the", " ", 
      RowBox[{"treegraph", ".", "  ", "If"}], " ", "they", " ", "are", " ", 
      "not", " ", "connected", " ", "directly", " ", "on", " ", "the", " ", 
      "treegraph"}], ",", " ", 
     RowBox[{"then", " ", "the", " ", "number", " ", "is", " ", 
      RowBox[{"zero", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", "numTreeVerts"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<=", "numTreeVerts"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", 
           RowBox[{"FindShortestPath", "[", 
            RowBox[{"TownsendTreeFlat", ",", 
             RowBox[{
              RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "]"}], "==", "2"}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"cophenEdgeWeights", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"cophenVertexWeights", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "-", 
            RowBox[{"cophenVertexWeights", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "initializing", " ", "the", " ", "table", " ", "that", " ", "will", " ", 
     "be", " ", "filled", " ", "with", " ", "the", " ", "cophenetic", " ", 
     "distances", " ", "between", " ", "the", " ", "expressions", " ", "on", 
     " ", "the", " ", "dendrogram"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cophenDist", "=", 
     RowBox[{"Table", "[", 
      RowBox[{"0", ",", "numVerts", ",", "numVerts"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cophenEdgeWeights", "//", "MatrixForm"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cophenDist", "//", "MatrixForm"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindShortestPath", "[", 
     RowBox[{"TownsendTreeFlat", ",", 
      RowBox[{
       RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
       RowBox[{"[", "27", "]"}], "]"}], ",", 
      RowBox[{
       RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
       RowBox[{"[", "20", "]"}], "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Position", "[", 
       RowBox[{
        RowBox[{"FindShortestPath", "[", 
         RowBox[{"TownsendTreeFlat", ",", 
          RowBox[{
           RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
           RowBox[{"[", "27", "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
           RowBox[{"[", "20", "]"}], "]"}]}], "]"}], ",", 
        "\"\<\[Psi](x)\>\""}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", "numVerts"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<=", "numVerts"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "<=", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"FindShortestPath", "[", 
             RowBox[{"TownsendTreeFlat", ",", 
              RowBox[{
               RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"i", "+", "19"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"j", "+", "19"}], "]"}], "]"}]}], "]"}], "]"}], "-", 
           "1"}]}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{
            RowBox[{
            "this", " ", "can", " ", "be", " ", "difficult", " ", "to", " ", 
             RowBox[{"parse", ".", "  ", "I"}], " ", "am", " ", "adding", " ",
              "up", " ", "the", " ", "weights", " ", "of", " ", "the", " ", 
             "edges", " ", "along", " ", "the", " ", "path", " ", "between", 
             " ", "the", " ", "ith", " ", "and", " ", "jth", " ", 
             RowBox[{"expressions", ".", "  ", "I"}], " ", "do", " ", "this", 
             " ", "by", " ", "finding", " ", "the", " ", "position", " ", 
             "within", " ", "the", " ", "treeVerts", " ", "list", " ", "of", 
             " ", "the", " ", "kth", " ", "and", " ", "k"}], "+", 
            RowBox[{
            "1", "th", " ", "vertices", " ", "of", " ", "the", " ", 
             "shortest", " ", "path", " ", "between", " ", "the", " ", "ith", 
             " ", "and", " ", "jth", " ", "expressions"}]}], ",", " ", 
           RowBox[{
           "and", " ", "then", " ", "pulling", " ", "the", " ", "weights", 
            " ", "out", " ", "of", " ", "the", " ", "edge", " ", "weight", 
            " ", "table", " ", "and", " ", "summing", " ", "them", " ", 
            "up"}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"cophenDist", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", 
          RowBox[{
           RowBox[{"cophenDist", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "+", 
           RowBox[{
            RowBox[{"cophenEdgeWeights", "[", 
             RowBox[{"[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Position", "[", "\[IndentingNewLine]", 
                 RowBox[{"treeVerts", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"FindShortestPath", "[", 
                    RowBox[{"TownsendTreeFlat", ",", 
                    RowBox[{
                    RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "19"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "19"}], "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "k", "]"}], "]"}]}], "\[IndentingNewLine]", 
                 "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Position", "[", "\[IndentingNewLine]", 
                 RowBox[{"treeVerts", ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"FindShortestPath", "[", 
                    RowBox[{"TownsendTreeFlat", ",", 
                    RowBox[{
                    RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"i", "+", "19"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"VertexList", "[", "TownsendTreeFlat", "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"j", "+", "19"}], "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"k", "+", "1"}], "]"}], "]"}]}], 
                 "\[IndentingNewLine]", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}]}], 
              "\[IndentingNewLine]", "]"}], "]"}], "/", "2"}]}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"normCophenDist", "=", 
     RowBox[{"cophenDist", "/", 
      RowBox[{"Max", "[", "cophenDist", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"cophenDist", "//", "MatrixForm"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"N", "[", "normCophenDist", "]"}], "//", "MatrixForm"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "exports", " ", "the", " ", "cophenetic", " ", "distance", " ", "matrix", 
     " ", "for", " ", "this", " ", 
     RowBox[{"population", "'"}], "s", " ", "dendrogram"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<F21TownsendNormCophenDist.xlsx\>\"", ",", "normCophenDist"}], "]"}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cophenCorrList", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "<=", "numVerts"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<=", "numVerts"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", "<", "j"}], ",", "\[IndentingNewLine]", 
         RowBox[{"cophenCorrList", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"cophenCorrList", ",", 
            RowBox[{"normCophenDist", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cophenCorrList", "//", "MatrixForm"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"exports", " ", "just", " ", "the", " ", "bottom", " ", "off"}], 
     "-", 
     RowBox[{
     "diagonal", " ", "part", " ", "of", " ", "the", " ", "distance", " ", 
      "matrix", " ", "as", " ", "a", " ", 
      RowBox[{"list", ".", "  ", "This"}], " ", "will", " ", "be", " ", 
      "used", " ", "as", " ", "a", " ", "vector", " ", "in", " ", "the", " ", 
      "\"\<Correlation\>\"", " ", "function", " ", "to", " ", "calculate", 
      " ", "Pearson", " ", "correlation", " ", "coefficients"}]}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<F21TownsendCophenCorrList.xlsx\>\"", ",", "cophenCorrList"}], "]"}],
     ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8523729802721815`*^9, 3.852372987807217*^9}, {
   3.8523730520815225`*^9, 3.8523730575883064`*^9}, {3.8527252725659885`*^9, 
   3.852725335100998*^9}, {3.852725379248787*^9, 3.8527254735197783`*^9}, {
   3.8527255199285455`*^9, 3.8527255342963395`*^9}, {3.8527255690797577`*^9, 
   3.8527259659417863`*^9}, {3.8527259975505114`*^9, 
   3.8527260453288374`*^9}, {3.8527260791109343`*^9, 
   3.8527263207954984`*^9}, {3.8527263682610106`*^9, 
   3.8527264535811243`*^9}, {3.852726502803949*^9, 3.8527265126878767`*^9}, {
   3.8527265521465497`*^9, 3.85272657098342*^9}, {3.852726603264494*^9, 
   3.8527267653752484`*^9}, {3.852726840027953*^9, 3.8527270590974245`*^9}, {
   3.852738551802763*^9, 3.85273871327409*^9}, {3.8527387607910285`*^9, 
   3.852738851115326*^9}, {3.852738892812909*^9, 3.8527389914543295`*^9}, {
   3.852739025443801*^9, 3.8527390282073345`*^9}, {3.852739064879537*^9, 
   3.852739082586466*^9}, {3.8527391160221653`*^9, 3.8527391215554185`*^9}, {
   3.8527391707167892`*^9, 3.8527391945158644`*^9}, {3.852739225937605*^9, 
   3.8527392376122894`*^9}, {3.852739268124881*^9, 3.8527393057680316`*^9}, {
   3.8527395123286085`*^9, 3.8527395668651786`*^9}, {3.8527396134188724`*^9, 
   3.8527396607082286`*^9}, {3.8527397081264153`*^9, 3.8527397841512156`*^9}, 
   3.8527398281036015`*^9, {3.8527399033902826`*^9, 3.852739995244157*^9}, {
   3.8527400784634895`*^9, 3.852740115436536*^9}, {3.852740231932521*^9, 
   3.852740275569254*^9}, {3.8527403409705906`*^9, 3.852740420821102*^9}, {
   3.852740489338405*^9, 3.852740769599079*^9}, {3.85274089481223*^9, 
   3.852740908485343*^9}, {3.8527412442188044`*^9, 3.852741583499022*^9}, {
   3.8527416168312454`*^9, 3.852741650335157*^9}, {3.852741705153619*^9, 
   3.8527417404008617`*^9}, 3.8527417744790487`*^9, {3.8527980479659023`*^9, 
   3.8527980758672066`*^9}, {3.8527983220523396`*^9, 
   3.8527985119401307`*^9}, {3.8527988952950335`*^9, 3.852799056399989*^9}, {
   3.8527991707130313`*^9, 3.85279917283821*^9}, {3.8527992432116566`*^9, 
   3.852799281161172*^9}, {3.852799348857351*^9, 3.85279935086061*^9}, {
   3.8527993937467775`*^9, 3.8527993985592117`*^9}, {3.852799446806364*^9, 
   3.8527995419364204`*^9}, 3.852803843775418*^9, {3.8533228617565355`*^9, 
   3.8533228635005655`*^9}, {3.8539222897316494`*^9, 
   3.8539222983386245`*^9}, {3.8539223961690135`*^9, 3.853922508651238*^9}, {
   3.8539242227891216`*^9, 3.8539243827264357`*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"b2d33c42-f5e0-411d-a6d5-901d1524f044"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "22", "35", "100", "11", "11", "11", "36", "36", "36", "36", "61", 
      "61", "61", "61", "61", "61", "61", "61", "11"},
     {"22", "0", "35", "100", "22", "22", "22", "36", "36", "36", "36", "61", 
      "61", "61", "61", "61", "61", "61", "61", "22"},
     {"35", "35", "0", "100", "35", "35", "35", "36", "36", "36", "36", "61", 
      "61", "61", "61", "61", "61", "61", "61", "35"},
     {"100", "100", "100", "0", "100", "100", "100", "100", "100", "100", 
      "100", "100", "100", "100", "100", "100", "100", "100", "100", "100"},
     {"11", "22", "35", "100", "0", "3", "4", "36", "36", "36", "36", "61", 
      "61", "61", "61", "61", "61", "61", "61", "6"},
     {"11", "22", "35", "100", "3", "0", "4", "36", "36", "36", "36", "61", 
      "61", "61", "61", "61", "61", "61", "61", "6"},
     {"11", "22", "35", "100", "4", "4", "0", "36", "36", "36", "36", "61", 
      "61", "61", "61", "61", "61", "61", "61", "6"},
     {"36", "36", "36", "100", "36", "36", "36", "0", "15", "2", "9", "61", 
      "61", "61", "61", "61", "61", "61", "61", "36"},
     {"36", "36", "36", "100", "36", "36", "36", "15", "0", "15", "15", "61", 
      "61", "61", "61", "61", "61", "61", "61", "36"},
     {"36", "36", "36", "100", "36", "36", "36", "2", "15", "0", "9", "61", 
      "61", "61", "61", "61", "61", "61", "61", "36"},
     {"36", "36", "36", "100", "36", "36", "36", "9", "15", "9", "0", "61", 
      "61", "61", "61", "61", "61", "61", "61", "36"},
     {"61", "61", "61", "100", "61", "61", "61", "61", "61", "61", "61", "0", 
      "27", "27", "29", "29", "46", "46", "46", "61"},
     {"61", "61", "61", "100", "61", "61", "61", "61", "61", "61", "61", "27",
       "0", "1", "29", "29", "46", "46", "46", "61"},
     {"61", "61", "61", "100", "61", "61", "61", "61", "61", "61", "61", "27",
       "1", "0", "29", "29", "46", "46", "46", "61"},
     {"61", "61", "61", "100", "61", "61", "61", "61", "61", "61", "61", "29",
       "29", "29", "0", "21", "46", "46", "46", "61"},
     {"61", "61", "61", "100", "61", "61", "61", "61", "61", "61", "61", "29",
       "29", "29", "21", "0", "46", "46", "46", "61"},
     {"61", "61", "61", "100", "61", "61", "61", "61", "61", "61", "61", "46",
       "46", "46", "46", "46", "0", "19", "19", "61"},
     {"61", "61", "61", "100", "61", "61", "61", "61", "61", "61", "61", "46",
       "46", "46", "46", "46", "19", "0", "18", "61"},
     {"61", "61", "61", "100", "61", "61", "61", "61", "61", "61", "61", "46",
       "46", "46", "46", "46", "19", "18", "0", "61"},
     {"11", "22", "35", "100", "6", "6", "6", "36", "36", "36", "36", "61", 
      "61", "61", "61", "61", "61", "61", "61", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.852803845486559*^9, 3.8535733307415338`*^9, 
  3.8539225243700886`*^9, 3.8539260351603537`*^9},
 CellLabel->
  "Out[229]//MatrixForm=",ExpressionUUID->"eea2ec28-203f-4fb2-b08d-\
57941ec609bc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["5 Export Files", "Section",
 CellChangeTimes->{{3.84434767778874*^9, 3.8443476870369225`*^9}, {
  3.8444241017611*^9, 3.84442410182825*^9}, {3.852799774404487*^9, 
  3.852799774706503*^9}, {3.8539225426361446`*^9, 
  3.8539225527003007`*^9}},ExpressionUUID->"11dd465f-84a8-48d5-be69-\
320eb77ea32f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "If", " ", "you", " ", "want", " ", "to", " ", "export", " ", "the", " ", 
    "animations", " ", "as", " ", "a", " ", "GIF"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<F21MSUCommunityDetection.gif\>\"", ",", "tlGraphs2", ",", 
     RowBox[{"\"\<DisplayDurations\>\"", "\[Rule]", "1"}]}], "]"}], 
   "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "If", " ", "you", " ", "want", " ", "to", " ", "export", " ", "the", " ", 
    "animations", " ", "as", " ", "a", " ", "video", " ", 
    RowBox[{"file", ".", "  ", "Note"}], " ", "that", " ", "right", " ", 
    "now", " ", "the", " ", "aspect", " ", "ratio", " ", "is", " ", "off", 
    " ", "so", " ", "the", " ", "top", " ", "bits", " ", "of", " ", "the", 
    " ", "graphs", " ", "are", " ", "cut", " ", "off", " ", "for", " ", 
    "several", " ", "of", " ", "the", " ", "frames"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"Export", "[", 
    RowBox[{"\"\<F21UMaineCommunityDetection.avi\>\"", ",", "tlGraphs2"}], 
    "]"}], "\[IndentingNewLine]", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "If", " ", "you", " ", "want", " ", "to", " ", "export", " ", "the", " ", 
     "dendrogram", " ", "as", " ", "a", " ", "JPG", " ", "file"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Overlay", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<Townsend\>\"", ",", 
       RowBox[{
        RowBox[{"Dendrogram", "[", 
         RowBox[{"TownsendTreeStagger", ",", 
          RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], "/.", 
        RowBox[{
         RowBox[{"Line", "[", "x_", "]"}], ":>", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
           RowBox[{"Line", "[", "x", "]"}]}], "}"}]}]}]}], "}"}], "]"}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{"\"\<TownsendDendrogram.jpg\>\"", ",", 
      RowBox[{"Overlay", "[", 
       RowBox[{"{", 
        RowBox[{"\"\< Townsend\>\"", ",", 
         RowBox[{
          RowBox[{"Dendrogram", "[", 
           RowBox[{"TownsendTreeStagger", ",", 
            RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], "/.", 
          RowBox[{
           RowBox[{"Line", "[", "x_", "]"}], ":>", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
             RowBox[{"Line", "[", "x", "]"}]}], "}"}]}]}]}], "}"}], "]"}]}], 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"splitNumGraphs", "//", "MatrixForm"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "If", " ", "you", " ", "want", " ", "to", " ", "export", " ", "a", " ", 
      "picture", " ", "of", " ", "the", " ", "network", " ", "after", " ", 
      "some", " ", "number", " ", "of", " ", "splits", " ", 
      RowBox[{"(", 
       RowBox[{
       "and", " ", "show", " ", "which", " ", "split", " ", "it", " ", 
        "precedes"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Export", "[", 
      RowBox[{"\"\<TownsendNetworkSplit5.jpg\>\"", ",", 
       RowBox[{"Overlay", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<    Townsend\>\"", ",", 
          RowBox[{"splitNumGraphs", "[", 
           RowBox[{"[", "5", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], 
     ";"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8443477016386566`*^9, 3.8443477027087183`*^9}, {
   3.8443499815827556`*^9, 3.844350025824921*^9}, {3.844424385782498*^9, 
   3.84442440804722*^9}, {3.844424473744302*^9, 3.844424504108739*^9}, {
   3.844424575600684*^9, 3.8444245913987427`*^9}, {3.8454651529891663`*^9, 
   3.8454651629485655`*^9}, {3.8475362014904137`*^9, 
   3.8475362025634327`*^9}, {3.851764321866686*^9, 3.851764336319096*^9}, {
   3.8539225554194255`*^9, 3.8539225837773314`*^9}, {3.853922626304808*^9, 
   3.853922671032511*^9}, 3.8539228772321887`*^9, 3.8539234754622617`*^9, {
   3.8539235412186174`*^9, 3.853923542648321*^9}, {3.853923625253237*^9, 
   3.8539236815360174`*^9}, {3.8539238284257107`*^9, 3.853923862152692*^9}, {
   3.853926044912048*^9, 3.853926074104839*^9}, {3.8540106614285555`*^9, 
   3.8540106784620523`*^9}, 3.8540122007098784`*^9, {3.864371372061821*^9, 
   3.864371399205759*^9}, {3.864372535411914*^9, 3.864372535819281*^9}, 
   3.864373451408677*^9},
 EmphasizeSyntaxErrors->True,
 CellLabel->
  "In[124]:=",ExpressionUUID->"0fe0df06-5fb5-488a-a342-34593eb6ecf8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "here", " ", "I", " ", "create", " ", "\"\<quickAnimation\>\"", " ", "by",
      " ", "removing", " ", "periodic", " ", "chunks", " ", "of", " ", "the", 
     " ", "graphs", " ", "during", " ", "the", " ", "beginning", " ", 
     "portion", " ", "of", " ", "the", " ", 
     RowBox[{"algorithm", "--"}], "essentially", " ", "skipping", " ", 
     "through", " ", "the", " ", "boring", " ", "part"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"quickAnimation", "=", 
     RowBox[{"Drop", "[", 
      RowBox[{"tlGraphs2", ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "10"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "3"}], ",", 
       RowBox[{"i", "<=", "15"}], ",", 
       RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"quickAnimation", "=", 
         RowBox[{"Drop", "[", 
          RowBox[{"quickAnimation", ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "5"}]}], "}"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"quickAnimation", "//", "MatrixForm"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"splitGraphs", "//", "MatrixForm"}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"ListAnimate", "[", 
     RowBox[{"quickAnimation", ",", "1", ",", 
      RowBox[{"ImageSize", "->", "All"}]}], "]"}], ";", "\[IndentingNewLine]",
     "\[IndentingNewLine]", 
    RowBox[{"Export", "[", 
     RowBox[{
     "\"\<F21SpinsCommunityDetection.gif\>\"", ",", "quickAnimation", ",", 
      RowBox[{"\"\<DisplayDurations\>\"", "->", "1"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8492655699273977`*^9, 3.849265577624309*^9}, {
   3.8492658649935417`*^9, 3.849265871637396*^9}, {3.849265911507024*^9, 
   3.849265965922132*^9}, {3.849266030955536*^9, 3.8492660317793007`*^9}, {
   3.849266088927931*^9, 3.84926611282724*^9}, {3.8492661544400177`*^9, 
   3.849266223898305*^9}, {3.8492662564457436`*^9, 3.849266258707056*^9}, {
   3.8492662969722013`*^9, 3.8492663968644133`*^9}, {3.8492664485810585`*^9, 
   3.849266462552571*^9}, {3.8492665193124714`*^9, 3.849266522383884*^9}, {
   3.849266793004157*^9, 3.8492668027543764`*^9}, {3.849267163652398*^9, 
   3.8492672286300926`*^9}, 3.8492675802099705`*^9, {3.8492685243740788`*^9, 
   3.8492685292317266`*^9}, 3.849268573378769*^9, {3.8492686092681675`*^9, 
   3.849268631361019*^9}, {3.849269003375986*^9, 3.849269014749219*^9}, {
   3.849269113193907*^9, 3.8492691207387676`*^9}, {3.8492692691547375`*^9, 
   3.8492692740089283`*^9}, {3.849792844506244*^9, 3.8497928656057386`*^9}, 
   3.8517642323320417`*^9, {3.8644592598150177`*^9, 3.8644593047570972`*^9}, {
   3.864459447655328*^9, 3.8644595135725*^9}, {3.864459559915405*^9, 
   3.864459560271902*^9}, {3.864459647041935*^9, 3.864459684940899*^9}, {
   3.864459725783669*^9, 3.8644597310313263`*^9}, {3.864459772637305*^9, 
   3.8644597808094363`*^9}, {3.864459820750234*^9, 3.8644598287356176`*^9}, {
   3.864459859948105*^9, 3.864459973740103*^9}, {3.864460024806903*^9, 
   3.864460024906402*^9}, {3.864460060550654*^9, 3.8644600723674307`*^9}, {
   3.86446011765053*^9, 3.86446012311893*^9}, {3.8644601847821383`*^9, 
   3.8644601975392437`*^9}, {3.8644602491452923`*^9, 
   3.8644602496964197`*^9}, {3.864460290030102*^9, 3.8644602929377584`*^9}, {
   3.8644603502142415`*^9, 3.8644603505953317`*^9}, {3.8644603983515987`*^9, 
   3.8644603987878704`*^9}, {3.8644604490867167`*^9, 3.864460450526524*^9}, {
   3.8644604910841837`*^9, 3.864460534653945*^9}, {3.8644605711997037`*^9, 
   3.864460610582753*^9}, {3.864460658555437*^9, 3.8644607045234337`*^9}, {
   3.8644607667175417`*^9, 3.864460778292482*^9}, {3.8644610401400676`*^9, 
   3.8644610403481507`*^9}},ExpressionUUID->"37e2cbe7-881c-4173-9032-\
6873ba370714"],

Cell[BoxData["\<\"F21SpinsCommunityDetection.gif\"\>"], "Output",
 CellChangeTimes->{{3.8644592761112022`*^9, 3.864459305345377*^9}, {
   3.864459449172851*^9, 3.8644594539981194`*^9}, 3.8644595446196103`*^9, 
   3.8644595821411886`*^9, 3.8644596945588355`*^9, 3.8644597376777515`*^9, {
   3.864459782317275*^9, 3.864459835396154*^9}, 3.8644599831170564`*^9, 
   3.8644600328450727`*^9, 3.86446013173939*^9, 3.8644602102993603`*^9, 
   3.864460262538546*^9, 3.8644603012918262`*^9, 3.864460358938015*^9, 
   3.864460407439047*^9, 3.8644604591837015`*^9, 3.8644605439430556`*^9, 
   3.86446062269203*^9, 3.8644607425998616`*^9, 3.864460809850767*^9, 
   3.864460843665156*^9},
 CellLabel->
  "Out[1476]=",ExpressionUUID->"f4988674-9221-4ae3-b69d-ca086f0d94af"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["6 Dendrogram [first split]", "Section",
 CellChangeTimes->{{3.86437366207924*^9, 
  3.8643736700235734`*^9}},ExpressionUUID->"9061c448-c789-4ea6-b2f7-\
fa86c1d1d31c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ConnectedGraphComponents", "[", 
   RowBox[{"tlGraphs3", "[", 
    RowBox[{"[", "150", "]"}], "]"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Length", "@", 
    RowBox[{"ConnectedGraphComponents", "[", 
     RowBox[{"tlGraphs3", "[", 
      RowBox[{"[", "150", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "initializes", " ", "nComm", " ", "as", " ", "the", " ", "number", " ", 
     "of", " ", "disconnected", " ", "subgraphs", " ", "in", " ", "the", " ", 
     "original"}], ",", " ", 
    RowBox[{"full", " ", 
     RowBox[{"network", ".", "  ", "This"}], " ", "will", " ", "be", " ", 
     "updated", " ", "in", " ", "the", " ", "loop", " ", "to", " ", "always", 
     " ", "be", " ", "the", " ", "current", " ", "number", " ", "of", " ", 
     "disconnected", " ", "subgraphs"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nComm", "=", 
    RowBox[{"Length", "@", 
     RowBox[{"ConnectedGraphComponents", "[", 
      RowBox[{"tlGraphs3", "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"redundant", "--"}], "I", " ", "had", " ", "forgotten", " ", 
    "that", " ", "\"\<num\>\"", " ", "was", " ", "already", " ", "used", " ", 
    "earlier", " ", "for", " ", "the", " ", "number", " ", "of", " ", 
    "edges"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nEdges", "=", 
    RowBox[{"EdgeCount", "[", 
     RowBox[{"tlGraphs3", "[", 
      RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "initializes", " ", "splits", " ", "as", " ", "an", " ", "empty", " ", 
    "list"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"splits", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "goes", " ", "through", " ", "the", " ", "list", " ", "of", " ", "graphs",
      " ", "as", " ", "edges", " ", "are", " ", "removed"}], ",", " ", 
    RowBox[{
    "and", " ", "adds", " ", "the", " ", "total", " ", "number", " ", "of", 
     " ", "removed", " ", "edges", " ", "at", " ", "the", " ", "point", " ", 
     "when", " ", "a", " ", "subgraph", " ", "divides", " ", "to", " ", "the",
      " ", "\"\<splits\>\"", " ", 
     RowBox[{"list", ".", "  ", "This"}], " ", "allows", " ", "us", " ", "to",
      " ", "keep", " ", "track", " ", "of", " ", "when", " ", "the", " ", 
     "splits", " ", "in", " ", "the", " ", "network", " ", "occur"}], ",", 
    " ", 
    RowBox[{
    "so", " ", "we", " ", "can", " ", "more", " ", "easily", " ", "identify", 
     " ", "what", " ", "spit", " ", "off", " ", "from", " ", "where"}], ",", 
    " ", 
    RowBox[{
    "and", " ", "when", " ", "that", " ", "division", " ", "occurs"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", "nEdges"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"j", "=", "nComm"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nComm", "=", 
      RowBox[{"Length", "@", 
       RowBox[{"ConnectedGraphComponents", "[", 
        RowBox[{"tlGraphs3", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"j", "!=", "nComm"}], ",", "\[IndentingNewLine]", 
       RowBox[{"splits", "=", 
        RowBox[{"Append", "[", 
         RowBox[{"splits", ",", "i"}], "]"}]}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "initializes", " ", "splitGraphs", " ", "as", " ", "an", " ", "empty", 
     " ", "list"}], ",", " ", 
    RowBox[{
    "to", " ", "be", " ", "filled", " ", "with", " ", "the", " ", "graphs", 
     " ", "*", "right", " ", "before", "*", " ", "being", " ", "divided"}]}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"splitGraphs", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"splitNumGraphs", "=", 
    RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "goes", " ", "through", " ", "and", " ", "fills", " ", "splitGraphs", " ",
      "with", " ", "snapshots", " ", "of", " ", "the", " ", "network"}], ",", 
    " ", 
    RowBox[{
    "right", " ", "before", " ", "each", " ", "split", " ", "occurs"}]}], " ",
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"Length", "@", "splits"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"splitGraphs", "=", 
      RowBox[{"Append", "[", "\[IndentingNewLine]", 
       RowBox[{"splitGraphs", ",", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"because", " ", 
            RowBox[{"we", "'"}], "re", " ", "using", " ", "tlGraphs3"}], ",", 
           " ", 
           RowBox[{"AND", " ", 
            RowBox[{"we", "'"}], "re", " ", "looking", " ", "at", " ", "the", 
            " ", "networks", " ", "one", " ", "step", " ", "before", " ", 
            "they", " ", "are", " ", "divided"}], ",", " ", 
           RowBox[{
           "we", " ", "can", " ", "see", " ", "the", " ", "edge", " ", "that",
             " ", "will", " ", "be", " ", "removed", " ", "in", " ", "that", 
            " ", "step", " ", 
            RowBox[{"(", 
             RowBox[{
             "they", " ", "are", " ", "highlighted", " ", "in", " ", 
              "tlGraphs3"}], ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tlGraphs3", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"splits", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Text", "[", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", 
               RowBox[{
                RowBox[{"splits", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], "]"}], ",", 
              RowBox[{"FontSize", "->", "50"}], ",", "Bold"}], "]"}], "]"}], 
           "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"splitNumGraphs", "=", 
      RowBox[{"Append", "[", "\[IndentingNewLine]", 
       RowBox[{"splitNumGraphs", ",", "\[IndentingNewLine]", 
        RowBox[{"Show", "[", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
           RowBox[{"because", " ", 
            RowBox[{"we", "'"}], "re", " ", "using", " ", "tlGraphs3"}], ",", 
           " ", 
           RowBox[{"AND", " ", 
            RowBox[{"we", "'"}], "re", " ", "looking", " ", "at", " ", "the", 
            " ", "networks", " ", "one", " ", "step", " ", "before", " ", 
            "they", " ", "are", " ", "divided"}], ",", " ", 
           RowBox[{
           "we", " ", "can", " ", "see", " ", "the", " ", "edge", " ", "that",
             " ", "will", " ", "be", " ", "removed", " ", "in", " ", "that", 
            " ", "step", " ", 
            RowBox[{"(", 
             RowBox[{
             "they", " ", "are", " ", "highlighted", " ", "in", " ", 
              "tlGraphs3"}], ")"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tlGraphs3", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"splits", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "-", "1"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Graphics", "[", 
           RowBox[{"Text", "[", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"ToString", "[", "i", "]"}], ",", 
              RowBox[{"FontSize", "->", "30"}], ",", "Bold"}], "]"}], "]"}], 
           "]"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
       "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "required", " ", "to", " ", "have", " ", "a", " ", "vertex", " ", "for", 
     " ", "each", " ", "division", " ", "point", " ", "of", " ", "the", " ", 
     "graph", " ", 
     RowBox[{"(", "nineteen", ")"}]}], ",", " ", 
    RowBox[{"as", " ", "well", " ", "as", " ", "each", " ", "expression"}]}], 
   " ", "*)"}], 
  RowBox[{
   RowBox[{"treeVerts", "=", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\"", ",", 
      "\"\<5\>\"", ",", "\"\<6\>\"", ",", "\"\<7\>\"", ",", "\"\<8\>\"", ",", 
      "\"\<9\>\"", ",", "\"\<10\>\"", ",", "\"\<11\>\"", ",", "\"\<12\>\"", 
      ",", "\"\<13\>\"", ",", "\"\<14\>\"", ",", "\"\<15\>\"", ",", 
      "\"\<16\>\"", ",", "\"\<17\>\"", ",", "\"\<18\>\"", ",", "\"\<19\>\"", 
      ",", 
      RowBox[{"OverVector", "[", "\"\<v\>\"", "]"}], ",", 
      RowBox[{"OverHat", "[", "\"\<j\>\"", "]"}], ",", 
      RowBox[{
      "OverHat", "[", "\"\<\!\(\*SubscriptBox[\(S\), \(z\)]\)\>\"", "]"}], 
      ",", "\"\<f(x)\>\"", ",", 
      "\"\<\[VerticalSeparator]\[Psi]\[RightAngleBracket]\>\"", ",", 
      "\"\<\[VerticalSeparator]\!\(\*SubscriptBox[\(E\), \(2\)]\)\
\[RightAngleBracket]\>\"", ",", 
      "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \(1\)]\)\
\[VerticalSeparator]\>\"", ",", "\"\<\[Psi](x)\>\"", ",", 
      "\"\<\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)(x)\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[CurlyPhi]\), \(3\)]\)(x)\>\"", ",", 
      "\"\<\!\(\*SubsuperscriptBox[\(\[CurlyPhi]\), \(4\), \(*\)]\)(x)\>\"", 
      ",", 
      RowBox[{
       RowBox[{"OverVector", "[", "\"\<u\>\"", "]"}], "\[CenterDot]", 
       RowBox[{"OverVector", "[", "\"\<v\>\"", "]"}]}], ",", 
      "\"\<\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\[Psi]\
\[RightAngleBracket]\>\"", ",", 
      "\"\<\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \(3\)]\)\
\[VerticalSeparator]\[Psi]\[RightAngleBracket]\>\"", ",", 
      "\"\<\[Integral]\!\(\*SuperscriptBox[\(\[Psi]\), \(*\)]\)\[Psi]dx\>\"", 
      ",", "\"\<\[Integral]\!\(\*SubsuperscriptBox[\(\[CurlyPhi]\), \(1\), \
\(*\)]\)\[Psi]dx\>\"", ",", 
      "\"\<\[VerticalSeparator]\[LeftAngleBracket]\!\(\*SubscriptBox[\(E\), \
\(4\)]\)\[VerticalSeparator]\[Psi]\[RightAngleBracket]\!\(\*SuperscriptBox[\(\
\[VerticalSeparator]\), \(2\)]\)\>\"", ",", 
      "\"\<\[VerticalSeparator]\[Integral]\!\(\*SuperscriptBox[\(\[Psi]\), \
\(*\)]\)\[Psi]dx\!\(\*SuperscriptBox[\(\[VerticalSeparator]\), \(2\)]\)\>\"", 
      ",", "\"\<\[VerticalSeparator]\[Integral]\!\(\*SubsuperscriptBox[\(\
\[CurlyPhi]\), \(2\), \(*\)]\)\[Psi]dx\!\(\*SuperscriptBox[\(\
\[VerticalSeparator]\), \(2\)]\)\>\"", ",", 
      "\"\<\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\>\""}], "}"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
   "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "NEED", " ", "TO", " ", "GO", " ", "THROUGH", " ", "THE", " ", "TREEEDGES",
     " ", "AND", " ", "FILL", " ", "IN", " ", "THE", " ", "CORRECT", " ", 
    "LINKS", " ", "FROM", " ", "THE", " ", "UPDATED", " ", "DENDROGRAM"}], 
   " ", "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"unfortunately", ",", " ", 
    RowBox[{
    "this", " ", "is", " ", "required", " ", "to", " ", "be", " ", "filled", 
     " ", "out", " ", "manually"}], ",", " ", 
    RowBox[{
    "by", " ", "creating", " ", "the", " ", "dendrogram", " ", "on", " ", 
     "paper"}], ",", " ", 
    RowBox[{
    "and", " ", "noting", " ", "when", " ", "and", " ", "where", " ", "each", 
     " ", "division", " ", "takes", " ", 
     RowBox[{"place", ".", "  ", "Not"}], " ", 
     RowBox[{"fun", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"treeEdges", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "23", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "4", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "6", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "16", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "22", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "4", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "5", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "7", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "5", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "10", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "31", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "6", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "9", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "21", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "7", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "8", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "20", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "8", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "12", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "13", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "9", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "19", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "10", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "28", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "10", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "11", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "11", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "30", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "11", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "15", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "12", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "39", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "12", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "14", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "13", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "34", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "13", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "35", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "14", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "24", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "14", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "18", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "15", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "27", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "15", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "29", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "16", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "37", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "16", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "17", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "17", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "36", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "17", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "38", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "18", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "25", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "18", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "26", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "19", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "33", "]"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "19", "]"}], "]"}], "\[UndirectedEdge]", 
       RowBox[{"treeVerts", "[", 
        RowBox[{"[", "32", "]"}], "]"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "defines", " ", "the", " ", "weights", " ", "of", " ", "the", " ", 
     "vertices", " ", 
     RowBox[{"(", 
      RowBox[{
      "which", " ", "Mathematica", " ", "uses", " ", "as", " ", "the", " ", 
       "\"\<heights\>\"", " ", "of", " ", "the", " ", "division", " ", 
       "points", " ", "when", " ", "the", " ", "tree", " ", "graph", " ", 
       "is", " ", "converted", " ", "to", " ", "a", " ", "dendrogram"}], 
      ")"}], "  ", "The"}], " ", "+", 
    RowBox[{
    "1", " ", "is", " ", "required", " ", "because", " ", "\"\<splits\>\"", 
     " ", 
     RowBox[{"doesn", "'"}], "t", " ", "include", " ", "the", " ", "final", 
     " ", "division", " ", 
     RowBox[{"(", 
      RowBox[{"for", " ", "some", " ", "reason"}], ")"}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"heightStagger", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"nEdges", "-", "1", "-", "splits"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "5"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "2"}], ",", 
       RowBox[{"-", "5"}]}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"heightFlat", "=", 
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"nEdges", "-", "1", "-", "splits"}], ",", 
      RowBox[{"{", "0", "}"}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"-", "2"}], ",", "numVerts"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TownsendTreeStagger", "=", 
   RowBox[{"TreeGraph", "[", 
    RowBox[{"treeVerts", ",", "treeEdges", ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
     RowBox[{"VertexWeight", "\[Rule]", "heightStagger"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TownsendTreeFlat", "=", 
    RowBox[{"TreeGraph", "[", 
     RowBox[{"treeVerts", ",", "treeEdges", ",", 
      RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
      RowBox[{"VertexWeight", "\[Rule]", "heightFlat"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dendrogram", "[", "TownsendTreeStagger", "]"}], "/.", 
   RowBox[{
    RowBox[{"Line", "[", "x_", "]"}], ":>", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
      RowBox[{"Line", "[", "x", "]"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Dendrogram", "[", "TownsendTreeFlat", "]"}], "/.", 
    RowBox[{
     RowBox[{"Line", "[", "x_", "]"}], ":>", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Thickness", "[", "0.005", "]"}], ",", 
       RowBox[{"Line", "[", "x", "]"}]}], "}"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Dendrogram", "[", 
    RowBox[{"TownsendTreeStagger", ",", 
     RowBox[{"ImageSize", "\[Rule]", "800"}]}], "]"}], "/.", 
   RowBox[{
    RowBox[{"Line", "[", "x_", "]"}], ":>", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Thickness", "[", "0.004", "]"}], ",", 
      RowBox[{"Line", "[", "x", "]"}]}], "}"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"splitGraphs", "//", "MatrixForm"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8643737107250433`*^9, 3.8643738829160795`*^9}, {
  3.8643739219136534`*^9, 3.864374054727183*^9}, {3.8643742455745244`*^9, 
  3.8643743074862027`*^9}},
 CellLabel->
  "In[426]:=",ExpressionUUID->"ea3524ea-9c6f-442e-9b4f-a5246e240c7b"],

Cell[BoxData[
 GraphicsBox[{
   {GrayLevel[0.65], 
    {Thickness[0.004], 
     LineBox[{{{54.609375, 66.}, {54.609375, 69.}}, {{330., 51.}, {330., 
       69.}}, {{54.609375, 69.}, {330., 69.}}, {{20, -5}, {20, 66}}, {{
       89.21875, 41.}, {89.21875, 66.}}, {{20, 66}, {89.21875, 66.}}, {{285., 
       28.}, {285., 51.}}, {{375., 1.}, {375., 51.}}, {{285., 51.}, {375., 
       51.}}, {{40, -2}, {40, 41}}, {{138.4375, 32.}, {138.4375, 
       41.}}, {{40, 41}, {138.4375, 41.}}, {{79.375, 23.}, {79.375, 32.}}, {{
       197.5, 12.}, {197.5, 32.}}, {{79.375, 32.}, {197.5, 32.}}, {{
       260, -5}, {260, 28}}, {{310., 15.}, {310., 
       28.}}, {{260, 28}, {310., 28.}}, {{60, -5}, {60, 23}}, {{98.75, 19.}, {
       98.75, 23.}}, {{60, 23}, {98.75, 23.}}, {{80, -2}, {80, 19}}, {{117.5, 
       7.}, {117.5, 19.}}, {{80, 19}, {117.5, 19.}}, {{290., 6.}, {290., 
       15.}}, {{330., 0.}, {330., 15.}}, {{290., 15.}, {330., 15.}}, {{
       180, -5}, {180, 12}}, {{215., 10.}, {215., 
       12.}}, {{180, 12}, {215., 12.}}, {{200, -2}, {200, 10}}, {{230., 3.}, {
       230., 10.}}, {{200, 10}, {230., 10.}}, {{100, -5}, {100, 7}}, {{135., 
       4.}, {135., 7.}}, {{100, 7}, {135., 7.}}, {{280, -2}, {280, 6}}, {{
       300, -5}, {300, 6}}, {{280, 6}, {300, 6}}, {{120, -2}, {120, 4}}, {{
       150., -1.}, {150., 4.}}, {{120, 4}, {150., 4.}}, {{220, -5}, {220, 
       3}}, {{240, -2}, {240, 3}}, {{220, 3}, {240, 3}}, {{360, -2}, {360, 
       1}}, {{390., 0.}, {390., 1.}}, {{360, 1}, {390., 1.}}, {{380, -5}, {
       380, 0}}, {{400, -2}, {400, 0}}, {{380, 0}, {400, 0}}, {{140, -5}, {
       140, -1}}, {{160, -2}, {160, -1}}, {{140, -1}, {160, -1}}, {{
       320, -2}, {320, 0}}, {{340, -5}, {340, 0}}, {{320, 0}, {340, 0}}}]}}, 
   InsetBox[
    FrameBox[
     TagBox["\<\"f(x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {20, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      OverscriptBox["\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(z\\)]\\)\"\>", "^"],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {40, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      OverscriptBox["\<\"j\"\>", "^"],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {60, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      OverscriptBox["\<\"v\"\>", "\[RightVector]"],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {80, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {100, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\[Psi]\[RightAngleBracket]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {120, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\\!\\(\\*SubscriptBox[\\(E\\), \
\\(2\\)]\\)\[RightAngleBracket]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {140, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(E\\), \
\\(1\\)]\\)\[VerticalSeparator]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {160, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\\!\\(\\*SuperscriptBox[\\(\[Psi]\\), \\(*\\)]\\)(x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {180, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(\[CurlyPhi]\\), \\(4\\), \
\\(*\\)]\\)(x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {200, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[Psi](x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {220, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \\(3\\)]\\)(x)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {240, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox[
      RowBox[{
       OverscriptBox["\<\"u\"\>", "\[RightVector]"], "\[CenterDot]", 
       OverscriptBox["\<\"v\"\>", "\[RightVector]"]}],
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {260, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[Integral]\\!\\(\\*SuperscriptBox[\\(\[Psi]\\), \\(*\\)]\\)\
\[Psi]dx\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {280, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[Integral]\\!\\(\\*SubsuperscriptBox[\\(\[CurlyPhi]\\), \
\\(1\\), \\(*\\)]\\)\[Psi]dx\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {300, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(E\\), \
\\(3\\)]\\)\[VerticalSeparator]\[Psi]\[RightAngleBracket]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {320, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\[Psi]\
\[RightAngleBracket]\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {340, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\[Integral]\\!\\(\\*SuperscriptBox[\\(\
\[Psi]\\), \\(*\\)]\\)\[Psi]dx\\!\\(\\*SuperscriptBox[\\(\[VerticalSeparator]\
\\), \\(2\\)]\\)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {360, -2}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\
\\(E\\), \\(4\\)]\\)\[VerticalSeparator]\[Psi]\[RightAngleBracket]\\!\\(\\*\
SuperscriptBox[\\(\[VerticalSeparator]\\), \\(2\\)]\\)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {380, -5}, Scaled[{0.5, 1}]], InsetBox[
    FrameBox[
     TagBox["\<\"\[VerticalSeparator]\[Integral]\\!\\(\\*SubsuperscriptBox[\\(\
\[CurlyPhi]\\), \\(2\\), \\(*\\)]\\)\[Psi]dx\\!\\(\\*SuperscriptBox[\\(\
\[VerticalSeparator]\\), \\(2\\)]\\)\"\>",
      Short],
     Background->GrayLevel[1],
     FrameMargins->{{0, 0}, {0, 0}},
     FrameStyle->GrayLevel[1],
     RoundingRadius->2,
     StripOnInput->False], {400, -2}, Scaled[{0.5, 1}]]},
  AlignmentPoint->Center,
  AspectRatio->NCache[2^Rational[-1, 2], 0.7071067811865475],
  Axes->False,
  AxesLabel->None,
  AxesOrigin->Automatic,
  AxesStyle->{},
  Background->None,
  BaseStyle->{},
  BaselinePosition->Automatic,
  ColorOutput->Automatic,
  ContentSelectable->Automatic,
  CoordinatesToolOptions:>Automatic,
  DisplayFunction:>$DisplayFunction,
  Epilog->{},
  FormatType:>TraditionalForm,
  Frame->False,
  FrameLabel->None,
  FrameStyle->{},
  FrameTicks->Automatic,
  FrameTicksStyle->{},
  GridLines->None,
  GridLinesStyle->{},
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->{557., Automatic},
  ImageSizeRaw->Automatic,
  LabelStyle->{},
  Method->Automatic,
  PlotLabel->None,
  PlotRange->All,
  PlotRangeClipping->False,
  PlotRangePadding->Automatic,
  PlotRegion->Automatic,
  PreserveImageOptions->Automatic,
  Prolog->{},
  RotateLabel->True,
  Ticks->Automatic,
  TicksStyle->{}]], "Output",
 CellChangeTimes->{{3.864373730522872*^9, 3.8643738175897264`*^9}, {
   3.8643738579634237`*^9, 3.8643738855306563`*^9}, {3.86437392547124*^9, 
   3.8643739872098246`*^9}, 3.8643740185133*^9, 3.864374057378392*^9, {
   3.8643742516493797`*^9, 3.8643743104083853`*^9}},
 CellLabel->
  "Out[443]=",ExpressionUUID->"15408a54-7a92-4973-b558-60ad115b1a13"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["7 Plotting networks", "Section",
 CellChangeTimes->{{3.875087331300877*^9, 3.875087338342908*^9}, {
  3.8750874079695096`*^9, 
  3.8750874097462964`*^9}},ExpressionUUID->"70526869-15b3-43f1-951a-\
2aa8789a6e99"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tlGraphs2", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"Polygon", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2.7", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.83", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.83", ",", "1.63"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2.7", ",", "1.63"}], "}"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexColors", "->", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Opacity", "[", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                "}"}], "]"}], "[", "0", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Opacity", "[", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                "}"}], "]"}], "[", "0", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Opacity", "[", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                "}"}], "]"}], "[", "1", "]"}]}], "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Opacity", "[", 
            RowBox[{"1", ",", 
             RowBox[{
              RowBox[{"ColorData", "[", 
               RowBox[{"{", 
                RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], 
                "}"}], "]"}], "[", "1", "]"}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}]}], "]"}], "}"}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColorData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], "}"}], "]"}], 
  "[", "0", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ColorData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<SolarColors\>\"", ",", "\"\<Reverse\>\""}], "}"}], "]"}], 
  "[", "1", "]"}]}], "Input",
 CellChangeTimes->{{3.87508738018948*^9, 3.87508738072316*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"e4a87950-cdf4-47b3-8c19-1331dca09de8"],

Cell[BoxData[
 GraphicsBox[{{
    {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
     {RGBColor[0.6722929120000001, 0.07040160000000001, 0.008987804799999999],
       Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        0.05050823952416661, 1.2708775398194678`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.6593992559999999, 0.0835393552], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        0.033783395915175984`, 0.4532103564478664}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {0., 
        0.9369379694559024}}, 0.03377376480560514]}}, 
     {RGBColor[
      0.8682532079999999, 0.20142807199999999`, 0.012795546399999993`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        1.3884939596419026`, 1.0645577289095876`}}, 0.03377376480560514]}}, 
     {RGBColor[0.877714584, 0.217674856, 0.014608807199999997`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        0.37908981147677456`, 0.4560823138278343}}, 0.03377376480560514]}}, 
     {RGBColor[0.95813628, 0.35577252, 0.030021523999999997`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        0.8138733419505009, 0.}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.731449624, 0.10300154080000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        0.5698916781798853, 1.1099855260217295`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.759161304, 0.11048699680000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        0.9592997700345087, 1.117354631096645}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.725907288, 0.1015044496], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {1.151653506509527,
         0.7493382158572047}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.770245976, 0.1134811792], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        1.2188267419837238`, 1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.65385692, 0.082042264], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        0.8743286042220534, 0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.803499992, 0.12246372640000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.79241532, 0.11946954400000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {1.506829670623023,
         0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        0.8732669146886558, 1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {1.868613956485776,
         0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[0.970443592, 0.380414568, 0.033054224800000004`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.442942339522339, 1.5312338153702914`}, {
        0.4569271112637898, 0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[0.98678372, 0.52775588, 0.059102468000000005`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        0.033783395915175984`, 0.4532103564478664}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {0., 
        0.9369379694559024}}, 0.03377376480560514]}}, 
     {RGBColor[
      0.9250214640000001, 0.29890877600000004`, 0.023675111200000005`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        1.3884939596419026`, 1.0645577289095876`}}, 0.03377376480560514]}}, 
     {RGBColor[0.882445272, 0.225798248, 0.015515437599999998`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        0.37908981147677456`, 0.4560823138278343}}, 0.03377376480560514]}}, 
     {RGBColor[0.967597656, 0.372019304, 0.0318347848], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        0.8138733419505009, 0.}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7536189680000001, 0.1089899056], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        0.5698916781798853, 1.1099855260217295`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.770245976, 0.1134811792], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        0.9592997700345087, 1.117354631096645}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.70928028, 0.097013176], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        1.151653506509527, 0.7493382158572047}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.76470364, 0.11198408800000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        1.2188267419837238`, 1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.698195608, 0.09401899360000002], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        0.8743286042220534, 0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7813306480000001, 0.11647536160000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.803499992, 0.12246372640000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        1.506829670623023, 0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        0.8732669146886558, 1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        0.6593693084342085, 0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[0.978133064, 0.449751656, 0.0453122216], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.05050823952416661, 1.2708775398194678`}, {
        0.4569271112637898, 0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {0., 
        0.9369379694559024}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.698195608, 0.09401899360000002], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        1.3884939596419026`, 1.0645577289095876`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.6593992559999999, 0.0835393552], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        0.37908981147677456`, 0.4560823138278343}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.703737944, 0.09551608480000001], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        0.8138733419505009, 0.}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.775788312, 0.11497827040000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        0.5698916781798853, 1.1099855260217295`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        0.9592997700345087, 1.117354631096645}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.759161304, 0.11048699680000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        1.151653506509527, 0.7493382158572047}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        1.2188267419837238`, 1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        0.8743286042220534, 0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7813306480000001, 0.11647536160000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.797957656, 0.1209666352], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        1.506829670623023, 0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        0.8732669146886558, 1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        1.59761104542911, 0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        0.6593693084342085, 0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.725907288, 0.1015044496], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.033783395915175984`, 0.4532103564478664}, {
        0.4569271112637898, 0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {1.3884939596419026`, 
        1.0645577289095876`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.79241532, 0.11946954400000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {0.37908981147677456`, 
        0.4560823138278343}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {0.8138733419505009, 0.}}, 
        0.03377376480560514]}}, 
     {RGBColor[1., 0.725907288, 0.1015044496], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {0.5698916781798853, 
        1.1099855260217295`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.742534296, 0.1059957232], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {0.9592997700345087, 
        1.117354631096645}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7480766320000001, 0.10749281440000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {1.151653506509527, 
        0.7493382158572047}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.770245976, 0.1134811792], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {1.2188267419837238`, 
        1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {0.8743286042220534, 
        0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {1.1711087515548313`, 
        0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {0.8732669146886558, 
        1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {0.6593693084342085, 
        0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {1.8591396718119655`, 
        1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0., 0.9369379694559024}, {0.4569271112637898, 
        0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[0.6496761440000001, 0.0625792, 0.0097473376], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        0.37908981147677456`, 0.4560823138278343}}, 0.03377376480560514]}}, 
     {RGBColor[0.849330456, 0.16893450400000007`, 0.009169024800000002], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        0.8138733419505009, 0.}}, 0.03377376480560514]}}, 
     {RGBColor[0.906098712, 0.266415208, 0.0200485896], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        0.5698916781798853, 1.1099855260217295`}}, 0.03377376480560514]}}, 
     {RGBColor[0.981016616, 0.47575306400000006`, 0.0499089704], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        0.9592997700345087, 1.117354631096645}}, 0.03377376480560514]}}, 
     {RGBColor[0.980055432, 0.46708592800000004`, 0.0483767208], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        1.151653506509527, 0.7493382158572047}}, 0.03377376480560514]}}, 
     {RGBColor[0.99639556, 0.6144272399999999, 0.074424964], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        1.2188267419837238`, 1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.770245976, 0.1134811792], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        0.8743286042220534, 0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7480766320000001, 0.10749281440000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.70928028, 0.097013176], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        1.506829670623023, 0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.775788312, 0.11497827040000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        0.8732669146886558, 1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        1.59761104542911, 0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.803499992, 0.12246372640000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        1.868613956485776, 0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        0.6593693084342085, 0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[0.774068368, 0.10560239999999999`, 0.005569907200000002], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.3884939596419026`, 1.0645577289095876`}, {
        0.4569271112637898, 0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[0.6044426079999999, 0.04693439999999999, 0.0112664032], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        0.8138733419505009, 0.}}, 0.03377376480560514]}}, 
     {RGBColor[0.985822536, 0.519088744, 0.0575702184], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        0.5698916781798853, 1.1099855260217295`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.670483928, 0.0865335376], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        0.9592997700345087, 1.117354631096645}}, 0.03377376480560514]}}, 
     {RGBColor[0.980055432, 0.46708592800000004`, 0.0483767208], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        1.151653506509527, 0.7493382158572047}}, 0.03377376480560514]}}, 
     {RGBColor[0.9935120080000001, 0.588425832, 0.0698282152], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        1.2188267419837238`, 1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.775788312, 0.11497827040000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        0.8743286042220534, 0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7813306480000001, 0.11647536160000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.6593992559999999, 0.0835393552], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        1.506829670623023, 0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.803499992, 0.12246372640000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        0.8732669146886558, 1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        1.59761104542911, 0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        1.868613956485776, 0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        0.6593693084342085, 0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[0.872983896, 0.209551464, 0.013702176799999997`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.37908981147677456`, 0.4560823138278343}, {
        0.4569271112637898, 0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.670483928, 0.0865335376], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {0.5698916781798853, 
        1.1099855260217295`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.6815686, 0.08952772], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {0.9592997700345087, 
        1.117354631096645}}, 0.03377376480560514]}}, 
     {RGBColor[0.999279112, 0.640428648, 0.0790217128], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {1.151653506509527, 
        0.7493382158572047}}, 0.03377376480560514]}}, 
     {RGBColor[0.99639556, 0.6144272399999999, 0.074424964], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {1.2188267419837238`, 
        1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {0.8743286042220534, 
        0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {1.1711087515548313`, 
        0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.676026264, 0.08803062880000001], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {1.506829670623023, 
        0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {0.8732669146886558, 
        1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {1.59761104542911, 
        0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {1.868613956485776, 
        0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {0.6593693084342085, 
        0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[
      0.8682532079999999, 0.20142807199999999`, 0.012795546399999993`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8138733419505009, 0.}, {0.4569271112637898, 
        0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[
      0.7288348320000001, 0.08995760000000003, 0.0070889727999999975`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        0.9592997700345087, 1.117354631096645}}, 0.03377376480560514]}}, 
     {RGBColor[0.7514515999999999, 0.09777999999999998, 0.006329440000000002],
       Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        1.151653506509527, 0.7493382158572047}}, 0.03377376480560514]}}, 
     {RGBColor[0.891906648, 0.24204503200000002`, 0.0173286984], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        1.2188267419837238`, 1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.803499992, 0.12246372640000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        0.8743286042220534, 0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.76470364, 0.11198408800000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.70928028, 0.097013176], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        1.506829670623023, 0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.742534296, 0.1059957232], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        0.8732669146886558, 1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7536189680000001, 0.1089899056], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {1.59761104542911,
         0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.797957656, 0.1209666352], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        1.868613956485776, 0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        0.6593693084342085, 0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[0.982938984, 0.493087336, 0.0529734696], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.5698916781798853, 1.1099855260217295`}, {
        0.4569271112637898, 0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[0.877714584, 0.217674856, 0.014608807199999997`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {1.151653506509527, 
        0.7493382158572047}}, 0.03377376480560514]}}, 
     {RGBColor[0.891906648, 0.24204503200000002`, 0.0173286984], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {
        1.2188267419837238`, 1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {0.8743286042220534,
         0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.742534296, 0.1059957232], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {1.506829670623023, 
        0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.76470364, 0.11198408800000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {0.8732669146886558,
         1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {1.59761104542911, 
        0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {1.868613956485776, 
        0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {0.6593693084342085,
         0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[0.98678372, 0.52775588, 0.059102468000000005`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.9592997700345087, 1.117354631096645}, {0.4569271112637898,
         0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[0.835138392, 0.14456432800000005`, 0.0064491336], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {
        1.2188267419837238`, 1.4177447001775434`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.803499992, 0.12246372640000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {0.8743286042220534,
         0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.725907288, 0.1015044496], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {1.506829670623023, 
        0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.76470364, 0.11198408800000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {0.8732669146886558,
         1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.770245976, 0.1134811792], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {1.59761104542911, 
        0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.803499992, 0.12246372640000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {1.868613956485776, 
        0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8145846640000001, 0.12545790880000002`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {0.6593693084342085,
         0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[0.999279112, 0.640428648, 0.0790217128], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.151653506509527, 0.7493382158572047}, {0.4569271112637898,
         0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.2188267419837238`, 1.4177447001775434`}, {
        0.8743286042220534, 0.433548029962432}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.797957656, 0.1209666352], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.2188267419837238`, 1.4177447001775434`}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.73699196, 0.10449863200000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.2188267419837238`, 1.4177447001775434`}, {
        1.506829670623023, 0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.775788312, 0.11497827040000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.2188267419837238`, 1.4177447001775434`}, {
        0.8732669146886558, 1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.786872984, 0.11797245280000002`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.2188267419837238`, 1.4177447001775434`}, {
        1.59761104542911, 0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.2188267419837238`, 1.4177447001775434`}, {
        1.868613956485776, 0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.2188267419837238`, 1.4177447001775434`}, {
        0.6593693084342085, 0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.2188267419837238`, 1.4177447001775434`}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.648314584, 0.08054517280000001], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.2188267419837238`, 1.4177447001775434`}, {
        0.4569271112637898, 0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[0.9108294, 0.2745386, 0.020955220000000004`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8743286042220534, 0.433548029962432}, {
        1.1711087515548313`, 0.25111474498073616`}}, 0.03377376480560514]}}, 
     {RGBColor[0.943944216, 0.33140234399999996`, 0.027301632799999996`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8743286042220534, 0.433548029962432}, {1.506829670623023, 
        0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[0.99158964, 0.5710915599999999, 0.066763716], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8743286042220534, 0.433548029962432}, {0.8732669146886558,
         1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[0.995434376, 0.605760104, 0.0728927144], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8743286042220534, 0.433548029962432}, {1.59761104542911, 
        0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.73699196, 0.10449863200000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8743286042220534, 0.433548029962432}, {1.868613956485776, 
        0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.775788312, 0.11497827040000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8743286042220534, 0.433548029962432}, {0.6593693084342085,
         0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7813306480000001, 0.11647536160000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8743286042220534, 0.433548029962432}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.797957656, 0.1209666352], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8743286042220534, 0.433548029962432}, {0.4569271112637898,
         0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[0.468742, 0., 0.0158236], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.1711087515548313`, 0.25111474498073616`}, {
        1.506829670623023, 0.5687245276096213}}, 0.03377376480560514]}}, 
     {RGBColor[
      0.9202907760000001, 0.29078538400000004`, 0.022768480800000004`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.1711087515548313`, 0.25111474498073616`}, {
        0.8732669146886558, 1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[0.95813628, 0.35577252, 0.030021523999999997`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.1711087515548313`, 0.25111474498073616`}, {
        1.59761104542911, 0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[0.999279112, 0.640428648, 0.0790217128], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.1711087515548313`, 0.25111474498073616`}, {
        1.868613956485776, 0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.725907288, 0.1015044496], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.1711087515548313`, 0.25111474498073616`}, {
        0.6593693084342085, 0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.742534296, 0.1059957232], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.1711087515548313`, 0.25111474498073616`}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.775788312, 0.11497827040000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.1711087515548313`, 0.25111474498073616`}, {
        0.4569271112637898, 0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[
      0.9250214640000001, 0.29890877600000004`, 0.023675111200000005`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.506829670623023, 0.5687245276096213}, {0.8732669146886558,
         1.498829363131788}}, 0.03377376480560514]}}, 
     {RGBColor[0.948674904, 0.33952573599999997`, 0.028208263199999997`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.506829670623023, 0.5687245276096213}, {1.59761104542911, 
        0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[0.99639556, 0.6144272399999999, 0.074424964], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.506829670623023, 0.5687245276096213}, {1.868613956485776, 
        0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.742534296, 0.1059957232], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.506829670623023, 0.5687245276096213}, {0.6593693084342085,
         0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7480766320000001, 0.10749281440000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.506829670623023, 0.5687245276096213}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.7203649520000001, 0.10000735840000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.506829670623023, 0.5687245276096213}, {0.4569271112637898,
         0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[0.849330456, 0.16893450400000007`, 0.009169024800000002], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8732669146886558, 1.498829363131788}, {1.59761104542911, 
        0.09720679045210678}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.670483928, 0.0865335376], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8732669146886558, 1.498829363131788}, {1.868613956485776, 
        0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.692653272, 0.09252190240000001], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8732669146886558, 1.498829363131788}, {0.6593693084342085,
         0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.698195608, 0.09401899360000002], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8732669146886558, 1.498829363131788}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.803499992, 0.12246372640000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.8732669146886558, 1.498829363131788}, {0.4569271112637898,
         0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.703737944, 0.09551608480000001], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.59761104542911, 0.09720679045210678}, {1.868613956485776, 
        0.7531092515005169}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.70928028, 0.097013176], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.59761104542911, 0.09720679045210678}, {0.6593693084342085,
         0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.698195608, 0.09401899360000002], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.59761104542911, 0.09720679045210678}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.8090423280000001, 0.12396081760000001`], Thickness[
      0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.59761104542911, 0.09720679045210678}, {0.4569271112637898,
         0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[
      0.7288348320000001, 0.08995760000000003, 0.0070889727999999975`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.868613956485776, 0.7531092515005169}, {0.6593693084342085,
         0.7400895425462337}}, 0.03377376480560514]}}, 
     {RGBColor[0.6949096800000001, 0.07822400000000002, 0.008228271999999998],
       Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.868613956485776, 0.7531092515005169}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.79241532, 0.11946954400000001`], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{1.868613956485776, 0.7531092515005169}, {0.4569271112637898,
         0.1002567595688919}}, 0.03377376480560514]}}, 
     {RGBColor[
      0.7288348320000001, 0.08995760000000003, 0.0070889727999999975`], 
      Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.6593693084342085, 0.7400895425462337}, {
        1.8591396718119655`, 1.4140731028848261`}}, 0.03377376480560514]}}, 
     {RGBColor[1., 0.820127, 0.126955], Thickness[0.005], 
      {Arrowheads[0.], 
       ArrowBox[{{0.6593693084342085, 0.7400895425462337}, {
        0.4569271112637898, 0.1002567595688919}}, 0.03377376480560514]}}}, 
    {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
      {RGBColor[0.969963, 0.376081, 0.0322881], 
       DiskBox[{0.442942339522339, 1.5312338153702914}, 0.03377376480560514]},
       InsetBox[
       StyleBox[
        OverscriptBox["\<\"v\"\>", "\[RightVector]"],
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.47671610432794415, 1.5650075801758965}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.969963, 0.376081, 0.0322881], 
       DiskBox[{0.05050823952416661, 1.2708775398194678}, 
        0.03377376480560514]}, InsetBox[
       StyleBox[
        OverscriptBox["\<\"j\"\>", "^"],
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.08428200432977176, 1.304651304625073}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.871407, 0.20684366666666673`, 0.013399966666666669`], 
       DiskBox[{0.033783395915175984, 0.4532103564478664}, 
        0.03377376480560514]}, InsetBox[
       StyleBox[
        OverscriptBox["\<\"\\!\\(\\*SubscriptBox[\\(S\\), \\(z\\)]\\)\"\>", 
         "^"],
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.06755716072078113, 0.4869841212534715}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.969963, 0.376081, 0.0322881], 
       DiskBox[{0., 0.9369379694559024}, 0.03377376480560514]}, InsetBox[
       StyleBox["\<\"f(x)\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.03377376480560514, 0.9707117342615075}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.468742, 0., 0.0158236], 
       DiskBox[{1.3884939596419026, 1.0645577289095876}, 
        0.03377376480560514]}, InsetBox[
       StyleBox["\<\"\[VerticalSeparator]\[Psi]\[RightAngleBracket]\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {1.4222677244475077, 1.0983314937151927}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[
       0.7043333333333333, 0.08148333333333332, 0.007911800000000002], 
       DiskBox[{0.37908981147677456, 0.4560823138278343}, 
        0.03377376480560514]}, InsetBox[
       StyleBox["\<\"\[VerticalSeparator]\\!\\(\\*SubscriptBox[\\(E\\), \
\\(2\\)]\\)\[RightAngleBracket]\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.4128635762823797, 0.48985607863343944}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[
       0.7043333333333333, 0.08148333333333332, 0.007911800000000002], 
       DiskBox[{0.8138733419505009, 0.}, 0.03377376480560514]}, InsetBox[
       StyleBox["\<\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(E\\), \
\\(1\\)]\\)\[VerticalSeparator]\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.847647106756106, 0.03377376480560514}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.468742, 0., 0.0158236], 
       DiskBox[{0.5698916781798853, 1.1099855260217295}, 
        0.03377376480560514]}, InsetBox[
       StyleBox["\<\"\[Psi](x)\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.6036654429854904, 1.1437592908273346}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.468742, 0., 0.0158236], 
       DiskBox[{0.9592997700345087, 1.117354631096645}, 0.03377376480560514]},
       InsetBox[
       StyleBox["\<\"\\!\\(\\*SuperscriptBox[\\(\[Psi]\\), \\(*\\)]\\)(x)\"\>",
        StripOnInput->False,
        FontSize->30], Offset[{2, 2}, {0.9930735348401138, 1.15112839590225}],
        ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.468742, 0., 0.0158236], 
       DiskBox[{1.151653506509527, 0.7493382158572047}, 0.03377376480560514]},
       InsetBox[
       StyleBox["\<\"\\!\\(\\*SubscriptBox[\\(\[CurlyPhi]\\), \
\\(3\\)]\\)(x)\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {1.1854272713151321, 0.7831119806628098}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.468742, 0., 0.0158236], 
       DiskBox[{1.2188267419837238, 1.4177447001775434}, 
        0.03377376480560514]}, InsetBox[
       StyleBox["\<\"\\!\\(\\*SubsuperscriptBox[\\(\[CurlyPhi]\\), \\(4\\), \
\\(*\\)]\\)(x)\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {1.2526005067893289, 1.4515184649831485}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.468742, 0., 0.0158236], 
       DiskBox[{0.8743286042220534, 0.433548029962432}, 0.03377376480560514]},
       InsetBox[
       StyleBox[
        RowBox[{
         OverscriptBox["\<\"u\"\>", "\[RightVector]"], "\[CenterDot]", 
         OverscriptBox["\<\"v\"\>", "\[RightVector]"]}],
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.9081023690276585, 0.46732179476803715}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.468742, 0., 0.0158236], 
       DiskBox[{1.1711087515548313, 0.25111474498073616}, 
        0.03377376480560514]}, InsetBox[
       StyleBox["\<\"\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\[Psi]\
\[RightAngleBracket]\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {1.2048825163604364, 0.2848885097863413}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[
       0.7043333333333333, 0.08148333333333332, 0.007911800000000002], 
       DiskBox[{1.506829670623023, 0.5687245276096213}, 0.03377376480560514]},
       InsetBox[
       StyleBox["\<\"\[LeftAngleBracket]\\!\\(\\*SubscriptBox[\\(E\\), \
\\(3\\)]\\)\[VerticalSeparator]\[Psi]\[RightAngleBracket]\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {1.5406034354286282, 0.6024982924152265}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.468742, 0., 0.0158236], 
       DiskBox[{0.8732669146886558, 1.498829363131788}, 0.03377376480560514]},
       InsetBox[
       StyleBox["\<\"\[Integral]\\!\\(\\*SuperscriptBox[\\(\[Psi]\\), \
\\(*\\)]\\)\[Psi]dx\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.9070406794942609, 1.532603127937393}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.969963, 0.376081, 0.0322881], 
       DiskBox[{1.59761104542911, 0.09720679045210678}, 0.03377376480560514]},
       InsetBox[
       StyleBox["\<\"\[Integral]\\!\\(\\*SubsuperscriptBox[\\(\[CurlyPhi]\\), \
\\(1\\), \\(*\\)]\\)\[Psi]dx\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {1.631384810234715, 0.13098055525771193}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[0.969963, 0.376081, 0.0322881], 
       DiskBox[{1.868613956485776, 0.7531092515005169}, 0.03377376480560514]},
       InsetBox[
       StyleBox["\<\"\[VerticalSeparator]\[LeftAngleBracket]\\!\\(\\*\
SubscriptBox[\\(E\\), \\(4\\)]\\)\[VerticalSeparator]\[Psi]\
\[RightAngleBracket]\\!\\(\\*SuperscriptBox[\\(\[VerticalSeparator]\\), \
\\(2\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {1.9023877212913811, 0.786883016306122}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[
       0.7043333333333333, 0.08148333333333332, 0.007911800000000002], 
       DiskBox[{0.6593693084342085, 0.7400895425462337}, 
        0.03377376480560514]}, InsetBox[
       StyleBox["\<\"\[VerticalSeparator]\[Integral]\\!\\(\\*SuperscriptBox[\\\
(\[Psi]\\), \
\\(*\\)]\\)\[Psi]dx\\!\\(\\*SuperscriptBox[\\(\[VerticalSeparator]\\), \
\\(2\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.6931430732398136, 0.7738633073518388}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[1., 0.820127, 0.126955], 
       DiskBox[{1.8591396718119655, 1.4140731028848261}, 
        0.03377376480560514]}, InsetBox[
       StyleBox["\<\"\[VerticalSeparator]\[Integral]\\!\\(\\*\
SubsuperscriptBox[\\(\[CurlyPhi]\\), \\(2\\), \
\\(*\\)]\\)\[Psi]dx\\!\\(\\*SuperscriptBox[\\(\[VerticalSeparator]\\), \
\\(2\\)]\\)\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {1.8929134366175706, 1.4478468676904312}], ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}, {
      {RGBColor[
       0.7043333333333333, 0.08148333333333332, 0.007911800000000002], 
       DiskBox[{0.4569271112637898, 0.1002567595688919}, 
        0.03377376480560514]}, InsetBox[
       StyleBox["\<\"\[LeftAngleBracket]\[Psi]\[VerticalSeparator]\"\>",
        StripOnInput->False,
        FontSize->30], 
       Offset[{2, 2}, {0.49070087606939494, 0.13403052437449706}], 
       ImageScaled[{0, 0}],
       BaseStyle->"Graphics"]}}}, 
   PolygonBox[{{2.7, 0}, {2.83, 0}, {2.83, 1.63}, {2.7, 1.63}},
    VertexColors->{
      Opacity[1, 
       RGBColor[1., 0.820127, 0.126955]], 
      Opacity[1, 
       RGBColor[1., 0.820127, 0.126955]], 
      Opacity[1, 
       RGBColor[0.468742, 0., 0.0158236]], 
      Opacity[1, 
       RGBColor[0.468742, 0., 0.0158236]]}]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->Large]], "Output",
 CellChangeTimes->{3.8750873687933865`*^9, 3.875087414824089*^9},
 CellLabel->"Out[43]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvXl4FFX2Pl7pqt47ne500p2VxW1ccBnHJe4o7ksUlVHGDTWIe1xBoiLI
REERCCgIBBARIyAgkQDBhkYCUSKRqHGCUQIBA9kXsgcw33rvUn17CdH5zPP8
/vn181TRdKqrq+495z3nvOfcU7c9/NLjo595+KUnHn140A0vPPzc4088+uKg
69NfUD+SIyRJ3ipJuhGDJEV93ytJJ9gVSNL//+n/p58OJm/lFHU3Ut0y8T9d
FvYK3qep2xB1swacYJ5wgoHkbWSqustRt02yJO2O0Um/JcrS4QsNEYcvNUbs
PU2JwGdbLRHkmFR2QuGMc4UzJpO3BlxZtrrhWwf+bojofTEyojc7Wqf0rovV
SQa87UmPjKi/0hiBQ3DNKQHnnCOcM4m8VXArueq2R7263pcjI8zkXPrez2N0
PS9ERuw5WYn4XKbnEU70gXCiRHoiNzvRgTP1Eb3vO3U2ciIFF1V5Gj3JkIBz
vB9yDhk3t3eATL4v2f0nwHBlh4z5bOEECfQEGMcdkRHkTiQHOYHc+7pdh89G
Sv19Gz/RgnHF9xzs59WBqB9qjMgJ+flZwgni6QkwSl5F/SzDHiFFs59/LjIC
Px80gmG+ncbv/hOXTvs27l79LK3fb2eou/rz9PTiXfTb9RcZIjIlSTiY7LJC
v42j2i4wiN82tVxujNh58TnGjIy0qLS0O22pqVdZhgw5RT94cKJitZoj/Cec
FnrCqSrs4QTi5XTfbI2ovO4Sc25ullvSk70pJ2dKbFbW2Oj+f+QG7M7YvXtF
giSvWTPTze9Lcgq/Tj/Vp5xnjRh5W3RE1oRkXdlwV0TjGfoIKYZexdFL7Lry
u6+zkt+P7Psqhg27yBR6FVeRq+jt/WGQJJNrCXcV0XQMrBadlHqtIyLjqfgI
ScldcIr660VPx+tazzNSEeeTrMpY6/lOufjFB+2Su/8rcrujZf8VXUyv6I8S
XNH3y8NfURS9InFcJCO9It/EAbrWf9gImmhXpOrMobNi5YKJjzukAeSKzMFX
NHLkjVbxijBOgpCd82cuy0ova3CykQxU5kuJEZKFXJa+cM35SuXO6wzttyfq
ui9Vp0AdJMlJLs/aoyqkL85FfhI/n5JythGXgktKT7/PjsvMzn7DhUsOd/k4
pp/LP41d/m5y+Z+Fv3yTf1TT7omJyJ4yUL04cvlG77Kz5IrCYYbqkpuNVd/f
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
0xZCN21m01ZEpu2TkGnbQ4e5Xx+TkVGAP/iU4rTh/9z28Ig/c7ghIv/FSBk+
J5+2ik+us1b8tiTO99V9Fj5t2XMvJd6rd+MzdtVxJNNWXr4mITd3prujY3vA
tLW3r08oKBhvrz4809lU966TTVtlWXokNC39IVcEc4WN3B4BHn/44cNYGH3M
2PHbLjNz9YKq7d69NO6mmy41S2f9pXkaGH6egomjPuYpmDMil5NH56mHzNN3
ofP0c6B69RlFUUaAQGGQ6SIqp51WmKe8dKuucv45JnGeirbPdsOvlRQ6T4MH
2VT/VJEO7M9yMfVSOju8ST7f/DjMVX090YnCAZKhu/urxM7ODQle7ytRlfun
OeprZzjh6rLpKvzyamPuhwN0Q04z8shFP2TIAAXTBS2DC9GweXoss1j6psWv
u7j/MHHi6Cji/p7xl6brb+Rj83/L852YpvycTdxOMnFLQybuh0AFE3ER7zW3
OZYdF+o2E5um4SIL9jJu1kfkPm0iMQmfuMqlQ63566bFFhe94mATp6Q/fQaZ
6mFD43TNjZ/FsblrqN+QmJX1cjTmrrJyXSKbu87OrxLhhuzYMdlZvOuNKKha
zcE3OUKWf59mw9xlPB4bwYImhXsimLvDKafpmXb9MTBOM2qqI1MNK7pmzdSY
yy47hzoSf/tLU3iufwqD+cz/E1V7OVMriabpFnnUz3SrklRnW/kk2ii9aNdL
wyQhZ/NQP7O9il4nzvegagUWOXXSqhidlBsnS5+oUeSLlgjtfFKcX6U13ldw
+3mEyo8L4/YTiwkvlRzBotj0YVQyymaepgVXVR9faslb+25s4fZMF5MMPTwc
qDReY9LOUARPR9m/f01CWtpwG8Tj11/XJDDxaG3NJ+JRVDQlOi/vuciq36c7
K37NdMhUPBDIaqpt8Mvzv9Xwi0oFJYV7VrzpAhrzyJaJB4iCe++9zkIm5rS/
JB4X9y0e/ye6+3xyXpKELVJFo/6CmIjem5N1vTck6XpHnSr3jjld7h0xWIfP
eq5L1BWfao941qwISdgHqLx0E3kpCpWXlf4fKFVlpP40JaL3IgMhrXqvN0X0
3mKmRJb6Wc8/DBHFibL0hMyGgZnkfqMZlkuDiQ42CZrZDiM/CB9F+fGumRiT
veBlNYynyAKPi3919fI7zdR6Kxs3znJjLCE633//STwVHSP4eojOzz9/EJOb
+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
MF1RfYMgcTG0vvQvdRDzEiEyzc1bkgEuuDxmYdratif/+OPyBHKFdJz0kBh+
GsgDTsuC+D8rNi/j49gcVdwkG5cdeCVwRqCKDQ1bB0CGujq3Jvd0bUw8Pu0R
+x/DTiEEiuCYgO4NcUw6iDh926c4IfgtU2Uo2DFpO9cY0Tp+lF0yIm6Q9OXl
qxOKi5fGgzPNzZ1O/SkXXCsjnCxJzs5+VXUW56iWWp17I9nL8+a9Ej1hwugo
coSCvRVumaTPfP0+e8mKh6JKP38oquyLRxzN3451SbojReNcknFfyYdxuHts
kyc/6cA34NHNnP6w+s2SYnAUzz47IhKfYUNlrrqXt/nGOjo71ice7SkYIOnI
Xt/YuCV50qQnHPxY4jXKxcWfqmB35Mi2ZB4uY6uv35i0bdt7MUpx8QyXpJ89
++mo4uJZMdh++nF2TPeYay3c++hRY6EJr6QSIlmie/lR1SsNEidTyzV/NxYV
zY7l2/ffz3XX1eUltrf7kpuaNicp1OttaPAmFRd/HJeWdodNiqQe8z2q8xxM
Ae5Snesb1c/3CZ89LTjckpnsQ7xiD9x+D2IHD8INEp6wuglKYF5sVgOqyKys
cS5VcGd5wBUsji8uzkmAbYMiNtUvcrc1TY3uannF3nNkbOQx378sf9x8shIQ
aH15veHAOdERqSEiWEBEcNFfCLT0yE51XxqvdOS8GVNZ+Xn85s1ZRHHfiZX0
WVnPOTMyHrKPHHmdBdk9QlnH0HP1VUymhd+06EzPi/9ETkaiFd1K+bJbbIgn
sZFgiZ4aJAwYPRqM030ARaz4j/OuTzWSLDpj+MDYlJWtTCCXSi6Emc+qKkgD
9ZIYlqnXO9qOmJzE5ZS8UUX8SlXPUi2I0DfkPBXJcK10hDOC5EjxorWqejGy
xoY8KeCXE8Y//bTA3dS0gWCcnuL/jh0LPMOHD6X5dlbyOlTd+QIFUI/ovEk4
NY7pK3KfRD9OSTlHjdiHWtRo3ZmTM9UtEwEzQMBUBddMSUNdTtyRxqwYHSRM
MvQceTnyWNsLtuPtz9uO1z5t/WPEGfrjT5ylRPv9qe1J1lBmR3UkiKjF9SFq
uFasHG6/QWN2TPCnOm+72NR9YE1CV9fW5M5OX/KBA6sSdu1aoPpW02KtROoM
OTmTYiB5aWmpttTUy81c8ijH3X85nDNU8Dj3E07wQGyxbACEDOJGRE4Xhlpm
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
iGXDSUTc4zKSfG3pY40TfxGjgaU8krkxoBjBMzcc+FBNR71GU7RTM98CMFXa
sainmBJ5esXw7gROWGFp2i2f5MG9+NTVTSykJsoE4ANF/3HroEolKWLZwaZS
Sb+SWXsZO3TD+FslNvoX/VBFOL+7P+f/SB8vbtlTMbWMM64kI3J8BmwIVxpL
3dGz+TSzNihxRnHeiH6W6GHzTMCnCfaTpTPcwDlBuoHcGlH9/Oazf9oLD/zT
XvDBvba1q8bamK+dOS9vhrIucfXztm2zPMeO7UjXsTZFZNfhZiF02SUjuAe/
+bXmzIzU9rPZTmTNkT0Hx5FND59a6EJ2ffv25xwXXJBmoOJKExJeOFS86ABi
V5Uv9BoJxM1lny/wFn/6rq+5ca2vpxtT4dbKIfxGGeBbfJA0bvah13tnABah
QoxOFCcwVKPUoMo0hPdofMvNfc2Nd8o+lP7lDiP/9H9rLiqao8I2ipKo3pF7
MGzHVQLS88AEHxEUf+Xgmow5rKle4j5z9FmHgahLrPXHnkruaJzv7m1b6es+
u9zX1bLc13RmibfmxBLfqVNbA3CHZj2JyZ3Ew3pLGsgNcLe0rPN1dW3x9/bu
SOvtxTznbTLVKbKx7+DIZuc1nX+kJjbkf+gmpKymt6rMI/0/y5eHxvfLrV8w
1MbG3TyaQggURWuo3BlnTHS1oLTGtaxsqae8fImHWs5ZToy6zBRNzVBothu1
zlBoulOijEaLy6hRlyjHWO24b4Unh/go6Hzj/Z6YiUWkpnQwjKFtdVZyNM+5
2ppwmjFYE2TMOyeazyfwdywgR/oNNs+CW6ghV/5yRT1nPyd9EoyzOmR0tzp5
bu6jyYztDskHn5driyc96CgqfM0JLONa8vHtFqW2yVLScQPxJH56969zIo2u
3I99DURXfp1eI8VNnoJMmpIJvYoQelo/Qv+BPljcmqZqatgAqsJM/ibi9Inz
kQUa+RmVCz+zYOK9MKH1l0nFO0cYyw+MMm/fPNllJ0BOFIGMa/13s9xtm0cQ
GJfPvdBc8sYQY+hFF+l92bNhtIV2jFtDwQftCLa5SVJBwSJfYeEyPwLq5csn
u4iS2sClyvBChC1m0RCmUjGg4okePDLjw8J0JEKkHT45PbWxbqqjpfF1x7dl
TycfCI61QYYSPvlmikFjFJWDn2FXWHgfAJYLHLyC3dmE0wTTegrrhlO5/pba
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
YyPymQcFYhQwLKoOHVpM8jdIk5aXr/F01KUJqxphoqLyu+f0KB8SNQwD4pgx
Q8K6Krbhl4aQxV9/Lqx3QWFXoGiszXbBQELSbaX+bsKLJumZi6ojWElnvyqh
OoFqHTW2TZsm29iQWTjzFhbOd27YMMkutjSzKdRwPJJSsampIKm9fX8yncir
AOZF5wzao6PlYDyw/nZ18eYbVQXLf6PIXTKQhJgIMBkDAazLMFAD0RXMClGG
DAa3eWCK2da23dPcvI08Bp4XcKVAjxR5NsYbMBjCSg5BBNHIHAODHIJCsJ84
7Lkb1MLbFTAo0w/+k0f+4YcvCGfVJg+qoYgwAT90pVHmriO6UTpOUQn44XNc
vnyMBUMQFTGkMSxnHitpOXfw77X8HUoZiIZtMBBSJC4BjcVAlk6FXGbz5o/M
iDODwbUuykBV59C7tdKdPgmW2OctXZpw3Cs5xaJZp+IX21UmKLKnnh3160TP
Qhsn1eOj/h9/WywRezXESe2IOOIG/+W36l+AuJiNa2Wpf9GKwjcL/U4qhEUc
AYu0wbmycnsit6PioWYMC3oFvktq3DiHmIYL64yGDuMuTMYIm4oTs20Y4Tfj
8yE6iVWAEjm/mnMLnZU/TrQWrP+jRh5Dd8OGl/Udp8gMA7nIdMnij2yBhmxn
T1eGsBIQhumjGdb76F26jmB+YqAhx9UU2JIACSzMEOQxQkeWQonIBjCWDZNJ
bvRcVEubBKjtyd7kvLwFbvptqaskLOMnh8GgFD5AOBsqfyx509h2dpy5o+oz
a6h+gYNizNRVvy6h/vhCV9nWl+K5V+KggQY5FsO0tCeNwBoZnrI7HAm2tuS4
5J0d2xNkSgSCTU1Yjvcn+f256OcV1kxVbe1WYgJ+4cJKV0PDGhIDYgUXmKZv
a9vkpqlXIXbKTXciKVhcPEfYjY41I2VTU7NcwOBE5oOhk+ZW0J+B/GLJ0UxX
5emVbqCt9NuJVpkaQJPXVI2Ll2mqzo2Nrzj+oWnN6n8bSJJVuE2Y8Kyxrc2b
jNQeSFZXl580YwZrhZS0QcLjE5VuRjI1khP49rAFwYOw4QbNaJynOibALCRs
THC0O01yyGlwAWA1IU48/EZ/sqDHmIMtL2+0KLFpa1vpCAbXuZD/6OgoTIb0
h05kyyVyG0AWb6/06Ew7o5oKvQflJW/Goc8ZnXIkP0vppgVApSdQ9CRAFt0d
PDjX0d6KcgKiX0q7pvosV+lROOWLtNM3C/EHcqk4WI0xATlUKeYQo4hTMf9t
imqHNkinXOEvmTDhlXiMN0CEW1W1nSDP788jnSoyxjxwXGQe3ZWaiwreMdeU
PKjlR1Xx/dqKr+7TxgoOuTMvzZcsJOBTEu7FoY8BzIP8E8yrqVnjKi1FRPSZ
FdlOkM/nW+UqKvrCgc8AbsKcfdJRS5x9NHv6lbASeZNra3MJ+wqEIJCxTzH5
4/8lHw56oHj3dzC4OxEjFdradiTwNvq8PHxsdJgXmyusoWPO1gu0WoGkmAMw
RM1SokjSRQdBxyQfNRRTCFiZB60mFgW93k/MRLijDKNwEJIXklWZC3dwjeI6
Ihys+dIpfd33cdKzwAwXlzQi3Ry+1i7HwasKdC7vOh5ZpWQTyGLFf1nSxzXi
ToDjOALH4ZeDY1rav0y/BI5pIyXTwEz8aug7NWzR0Ls04vuKp4Hg18zVAy4g
WN2ZOzGsWMXZgBJJFk/vc3d86lnwWw1GCqNzjC5g2mDwQDKKlLU1q1zIqvrO
LnI88MDv1Hg49so0J6MuLfnCCUriqKpMdxQXDDVAusNGyPYd/0jVrOKNO/KN
/q1yf8FQfZMfXoizLN2dc629FRPZPC892NjZsS+JHvuTmpr2JVVX5yYKi0BC
QcF8Fw/0xNFTicp1Y1KJ0kzmjvHt0Q9FC6ZG50VLSlaTXm145NNIm5jkD31y
gGgQVVb6TlzNxTlWf32mvbYm0xFsQisyoaLCX7HEDd/74mUP4ssVuChstyXu
97hhxUMkNDf9WWNt9WybghBRuIfRA/LYeWQlExZVE3AIuR4ucjQqdHRsFY4t
wlZ7k6u5eb2rsTHH+d13i5x0i57pQohXVkasP5Y7EXctc0Sba0AkEbUrZ6bx
YUNERI1bt7xnRkZUuPoFRCoJIlWVJ0eb8B9hrb9v3wx7a+veJCkar702mX6j
7NKfMOE1M84nck4xNGKEqdSJBrkmoJHGeYrc7D9ruMqUIxGG5OKXR9+5CkjM
zEw1Alxe78fxQCHizdVOuD5vcAmrahJO4urqXQSF3PJjyJB79N9+/b65tepV
4RuiSMTPxYWjSZs6sDh58lC0NQKJysLCiZacnFHxHIE6ikAkLRv8wuIdhcCq
0zPtBfmfiQGf1zvbIcTpntLSbDeCqIKCDBfOO3ZF3n779eoo5KmiJ3qSuRZ0
V6rFGoxYCAMgkUPHYFFAD7Nm8P+4rfiOqXZf8WN6kA5OUsK9vngfYgVKRRww
EaQzxnM8x45luy9cWO9BzZBGeGq/fxPp2IsmHa0aCnHlPDvEzRLcK9B2QYcv
/FrFckg6Djo6OHh3IkBXU7ODgg4Dc3Y/jrQCYGdcveRmpdOhIfDB2RwGJEqK
eYllZYsdSK4eODDThlnHOso5SLe50xrn3auvPmIgnGMn4gBZX8lCRNpHRpkn
ClavwDxRrCph3kBoocMnvio19UF9ff1KJy8rhta9b+Z9XpdM+n4//DDT+sIL
f9IiAmLpTOluHjHYlYkXy3tRvKxl4cfFCnEj/nAaw8SMAgfIwonOq4BO6sLP
QYd9wC8BXYw+QyVmmwHCeFv4BOioWM05MhX4ExtfP/CVffLJcDPcr2QMfFDk
kHYyyacAU+HowBAtUogLSL8c7ZpTFhVley5ezCPkq69b55YDfTItspvclZ+b
nvDOdt+p+U4l8CdTLFk40izmG1km+aqjyZi5A2a6YLYLjvIfXtL7a0bHNTdO
iPefGGcOvnK3tmP4Q/qeN58wdi8eLSzlAKHM2N62N6m9HQ3j6GMQ3nE9mtnX
J7z6Kg2L6T6W7kC83qVuVfsrT8TJ1F2vP6gPvnKXBgVGHL7HrlMuEeIdOUmy
K84/cYu6/ZV7NDggDcT9qUdvUaPOSGqNCnp/eOhDBqh2yPtn7ejSpg3EW5Cy
VlRsI074+9NH20BVpE7l5BQkAW3aG/+rkFK1tjrd6vcvI1XAtrbdiZ0d3uT2
gLCtp/NkFHnjk1TgKmErvTek/1snv/0ahZhiHjjQrvCdzXbV1611Bxo3eEJd
OxJ6icFiAUerAmjFjCiJkYgehsGdnRSx7e1ryZXb1rbWdfr0euGxOxMhOqyt
XeGkeFWh+MjxKjaaszNOilQ+CAL+V2R8820JivRZgzUEr/IwXvXAK/619Ntx
lkDjOndXF4YlFqV0dR1KAWS//TaHoJOlr7KzP7VH0VWxd+8it3hucTdvgbCw
16eApfeFK25SlR7+j0mKWSh5xN9l3qLAbFbWq3Fw/Q8EvnQoCGGVVCqxPwm2
MWFBqxFdiGfLPzTXnnxBD6gCr03nUg3egvFWqpia7wQRT5xY5PD5vsQHudqF
PrIclxDB0EwpAywiFgCgrWULB6w6ULfUVX74DdOWnGfI+C/qW/VrlZION0tN
fSy845d0c0cBVlishsdHf0bc707SkSxOOSOyFCpRUcGCF13806aNMEe5Syqk
MSZch4V7bdWRR3T8edEFhnoK1AwNDbuSEMhB3pqIYUq7BDTuTISpMPKoHR3b
PdS+mlJXSamL9j+s8iAtK6Eq589/xywNK6kwSd1MmpjDoC0++IGlYPMfVZS1
8bffSisyOJ0gTJM2HEIEi+55vCaPovgEaXCXBZgKTGbj4JVRawcV5uIgAzt5
8ssm/hXx+RnRwSYRHIiuc2GhLAtN+sBXKpKNCV9KUiNaC3Nzx1tOnlzk6OgQ
4LtnvCU04iF9153/o2p9d4gedUm0Li5d+lpcQoKFuS2obox6ewPCT9mHwmz7
hu/jipoeln+NFnmMx3+l+deYsWZEubMBd9f9fPgTIHjFq5dDsHREAEcwPBCv
iGDmDM37HyUIVg8alCyW/u+V0aoi3pccn4X8jPixQNtzesif9MVjXo6nC50m
wixMRjG9atVUh9RkDNKf3bvTnWQgteiHBzOxSEwD3XQxBaBpc/sPP6xwV13I
JoGpjDJag6GQ/ELD8/Dd3JZN49BmAEArq84scHJlAAqev5TR9OwyIimaueBO
Fed08aGndGigLC8bgRGbenRRlB6bYWtC21Z7fiLFtAKYhnFBZ+fXpCIm3Kuh
y7xwYWvCsmUfWIuLYXG81A0rMOoEpoE69mTFbBtUtGXfjYrL2/m8Hs0mt9+W
KLqYPfPM79UYE0Mnm9H7n36caF6w4D9m2jhCzwGuriW/9csywuLD2Q1VTfBZ
DkDLtP66+TbgGUcwuI9I/itOrE8oLcpw+UpmOjWEymo+PQcmMCVHhaWierW7
tWWzh2aAVTXVCx2w7sXEnIsXNyfARArNB0hntbRsdPn9y4kqDx+ZcK9HN2Rv
b15CVxeWx62e1taN7kBgrYvaDIyz8MCWXZoxVK0aqHGkf5fTqe8H8xjAWCYJ
cTElsKY62+WvX+UOhYQQV97b+00KzGgOJh8/vtaDRszwZF7kTrDV2Z3M6gsK
9KuKommelJBCmM28yZ3tkVf99FYcQMwhjBYTsc+R1TWx2V+w4G0zBqAi7dvc
vJzHuspgMMfZ2LjcWV+/IxEGZZTEmrKytQnB2rQ4NPk3nn/X1NE4wdxaP90K
60gZ9YhRoL+irm6ti0CYobikZL5DFOlQN301UAxH/pMVK9yBumy3vyrTVbzr
cQPTpA76DT1ZSJPwFVAM7Eab/aPwLaZ4JdNDRBQrIqe1DRlyl5YpWbRSey9c
7bzLc9pnr8RXFD4sbKpAYDWoDB0hGq9BXr+fkldFyGuACw2850Ih2lzZ1LTJ
XVmZLVB3gaO4OJ1kdjMyRtCcCYvxADap6Q36QQFQ6sUvIhg9u1IE5+2aYq86
/pyBIlg55j/XiOHac8/9zcDSu9z+BgE4T9pINbp8pAk6MPBGQGQQV06hDAdo
VP4l9q06GADx7DAOwJlPo8NzDSBPGCM4lMBZNE67Apy5/jYmnFmqTzo+p6Rk
jr2lZY2rvX2NU+KS89BDzIKDpXr+P8BMR9FdwZuTgTl6S0JyzTR5edmQmOV+
r8JjNfcD5gfWYfCYmUCP+fDP4W0Cw3CMwXQkDRz9fdAwK3JSqrRLUDrGJz9/
kVtaN4X4Z8GC963SqXXSygTnLjZjtLI1lQgHwF3v3pEm1ErLf5xuZdzV5uXN
dkjTSrx95ZP//EpR9s3IeAVBr7r463TxIcAvLlQ8jCXcMTA1GsERXS4sU5n6
4rUKjl8cBbse1lT50ox5O0U7Hm3m4if1JYffiz93NtPpr9voaW/bkwgG19Zi
kOehFIpgTSh0OKWn50j/YLAopb29iMzoDgQKUzBPB6shrNeqqvKTuTfB7p1j
LQV5w4TIFySWqdEEKr1WOI+VFMU/fP+pOSPj7cujmAmNpN0uPAkd7nZRYVYv
fwXsP4BhjB4QOKyrr1vIOJzlAINRC0N2Fb85bdIr5rQHMWiYwFi5+/NbtMVf
zXB4981xtgohFYWwNtAA47epFq93uh3fZEHB53Z4FwADsDFh5aXKypXEb6el
ZZWT8VjR07PFfenSdndPTy5xQtkmrHgtLZvc4EhJyQIH5r7BTUFivhKDyZHG
svQDtSBI9u57M67023dNqMqCzNAc+c4ucIDL9XU5brSog8q9vV8LsfHepJaW
nYmHDo6zgOdEwctWAr7VgbaIB8mo1OLV0dglBuwx+Fx+4El9zclRJimfRaFH
+Ky0UI9MpFdh/DnVVl4+z15bm2lvbV3hAJ/xM7gNTjc07Ej44YdVHihbkerv
CS529HRiH9vZli18Ho312U6spwTRcgrqhgZ4a+4ksJZJYmas9RI1rSp6NDZp
spZHzu4p2v6wjneTjHnNIRY8Obkj+qDFttm7dVFBtPp2Mkk9fKNrxUQ7k09I
x9KRoacxjALot62H5Ii4OCwZKC9ce72yZNstqppjf9dhxhIHdmsrB7YqFNqd
2N0dBnZzs0BNZU3NWrdMD5sc2KJyhVNa2tNxvLqbnk7lx2VlWS6KWgO8HKT9
rKhNY94eBzb+lMofhseVFz+uE/5uUFuFJLVBH77yly4dY+WVWSiYgW7YJnB0
x0jKkv2cFN0YK4Q/AcSGKa9YyWXjG8Drr4QPURoinpF++OR5SeFUprhJ+Fvf
FWC9i8Ca3Gv2rJti//HQAmftiRUuHBd/ynL9eOhz275NaSY8ZrhRppg+5hHd
b5wmOXkWek8WKuk0oL17J1urq7OFE3pZhAnQBx88Rm2zmdZZ6qWPgzzbZYjN
mBbDGVUXMRRWRlv+EIaOl1G5LvkMWJ8Wft7M/vt49lhsHCR9p2LzDvsIx0uf
24+7q1M9eq7DL6B6jFl8CuksPv4JYNpQ9OpIphHxG4uSYR9QXLxSqoZSQQ01
atRQ5nhiVUh2auRnXOFk2AsluTo19X4yTxYHiM41vFQhqMnIeMeSt+oPKmie
inY9rkdpF8Fz3u6ZopWrdOQ6n6E4dIitXxTGVRGzY8nbw9A3wFumKNw/TB/l
xO3M2/E3Te7Wv2m8+c/rK09mOKpJSWdTYlOTN7mr6xvC7N7eo8JR0v/SpW+F
fx4b0NPz7YBQ6CiZfYcOU9if8rnusEsFq4kpkfAWnx4UvX4rPv7oYR2oLQ2l
wW/hE427LL/pvTpWyjvsU6TEr/CawMSJTxqUBN2KutpF9qqqJQ7YuDELbrXX
u8SNX+INroOSFTJktpWE4Jq88YnKmh9nOWp/mu1oOb/UFQys9wDiba1rkMAW
IC5TnK2cbeN+DFiohXs1Wmeys98X/pin4zIy/mNpadniCYU2uYSYdpuAdiC8
t3ermwBcTu4V1dWrXChwSvpj1dBzwVIBYlm+i8YfpoyBcfIBs9FDuTteMxYd
TItrqMffDXrL1F1deYTdXV37k8BuGJKW/zjbTnLhwnP16XSV6fr2MNEOsLy8
eS68g/T096x8Uy9FOY7ijX/EFDgB5MLyynLepKNGzBGH8c0mPhg4xs+dW2Cr
rc1yBAI5zpaWdUKoAveqncQhp7FxR0Koc7vwsfV25QjfNTDeGljqKP12th3T
dpSU3jDViaK3CvsruGpLac3ooMbWmG+VvXtnkdGyhZsGaxXhcJtupGaRzb9w
ryLO9BHXmBBSqy6f7ea+ZNHZbvF6FsXc4QlGPAMuVWSRk0An/Ct9b2bg21d0
n6ao4D0LKt0wpG1o2JLQ1LQtAZPSg8GdiaB4VxdleFeX6GQkfDzr3BTjAgMz
w+P+6JJkhsg9ENiRIOzzEvDP1lbIJeBmtJ2wm443QSz+pZuzu/TwqPiaky8Y
ivLu1zB887w3v/3003IXxbccJWbUHWjim1jHMlsgnCCPPnqHFl9q2OFegTCb
bsHCqC7IHCXKOjln3pda4sWy9nVHht4YWMTt9JDHzs5+10xcj+iQI+GVRseT
uesyijxJL03Uy1wOtgBrLI9ZXMJEKUO1RaQNcLyMRdz0LLpsWMzT1GOvBFBl
uOWQ56a5f3QEOhlPYg35Q+t89KeJNT4anZBkikExCwYgVo4e/EdnVg8xSsr+
CjqV6i2zNOmMiQypL/1WCWQiBsR9xhfPRw9kJpIo8LJQ2GiDnxAP5+9IM6vD
lxnZl4c/UtIeczVskrHpSopNJKH5WFp8fHAvKfnmWd22jfep+bFp3VN6fMxn
z+5MCoWKCTKx2n/bXwFiyjTd3SUDWloOJF+8uDMRm14yIUNGXRxkDJapL93U
x0sL25a56c+QQX8yFuxu3vRWHG11vAws6eevodW4cFcNvosouyNicJWa+oC+
7PtpaNWkuKyDtd44c3hiBctUSycJYjuV+md1P+itWGG4svA9S135bEfw/EJX
Z9ViV1d1pqu7fY3bXzPdCmLW1cyy1tUuc5AZ5krCy7j09BHievnccw8Zzp5d
LQSbm4U4d6sbyOTADIUoNFGmk1HTcBXSmZMnvxqPoU5IAtPmFno+EkLxGyEk
HW2kKTwwylR5apbV653lKDma4cDU42AQZraFGM7bCYlVMJifVHlqsZMCkvbi
oHwMVA4a5BaWiVncVAibEJ8vNwntpjGTQ3xq5K9UIiULFl2rUBBAqkuK3qY9
NfxTZXCkXNQUFn7hwMAJjCaqqFjuOn58qbO+fq2ro4P6oQo0VMCFl8x36AL+
KBvbm7Oc+73TWXic7aIpaA0iWxjOQeRWVpZh93rHmaHqIntjliGR8hAHJs56
192tYTyc/I6zXzQPyUQ5yQ0T+vD9Xi7lTBNgkSln0eRM8jhUgqN4aIBGWvpa
PJwt3nyTCiysKXlIW/fdY7qysmw3YiZ4QdbVbfQ0NGx0Q1iFhLP8/PkcF4Mf
gkG4RkjUy8R/HJ4YSBjAZhCfrozayWrw8/nz690A4Natk238d5Ftxq7nBYNM
mbfhTiIoxoG0M1sUTSaadJYKrYBqFrpGKGjZHAikGPAder1zyDRcatS8EA1M
Av705wbfpJHCoZ3YB02yRbtAsJ1XhA02o2DBoEQFksbS8UvgFbyPvvpqspWP
+oOEat79v4toMR4m/SKujMAIARVD4CEhBhXfjiVMVcSc5HxifStXDSbrcXfd
z98QFi7vy8KB/D30HeCBhJ/BoI5A4+RJD/RBYwzVFMGl+DiJ/S+PLPlyQPJe
/CbRBkdLqehE6cUuaV54yJB7dFRUFEYjH+SUuegBfGUEjait4bIiAgl6SWmh
lZIqhYHHQdeZ5VxPxRCJ3amoo+Kuu30RqZTOhoJ+igWV+BEGdhI66st/eFkv
peOWja/E8YmzjY1fpYCOly6V9CeAlOlpPHmkf2fn4f4tLYUp1dU7kzC/oqBg
qg2JiqFD79TkbntWR1PBQsDylyi7bIrJlSteNv5/YDIiJ4zqcJQD0pYtmKgx
1uI7M8vKcsFqyKb27//UjLlOqKiCkWgNFIUAfaoDKlKbfUzbr3T9k3H1x+c4
Oi4sEh4JTMrU7eVvx3ecfzsuUD3JUl+3zFFTvcxR/tM8O40pTZMnvygatcBx
7aefMp1YvZqa1gtM3OTu7t4iHJvdiDPxT6xzWJ+MFJPcEbaiAv0gKz1Lloy1
0b9dDBpfN1adn2EFFpm9gjI3d7r9+PEsFzb/HR17kxgZz5/LdkX1p6rLSkfG
+SrHm0uOTLEW5M9wUCepHI8yxunPVgkpDX3fDTcyGhYffJsM5MDik5PzsZVi
b4WLFtZUmGSICAAH1KmNjevdEEeBgj09uxMuda9xEf7RCNHU1b7c+d13CG4m
27KyRls2bPjUVlKS6fJ6qWktjGwAxsrKFQIDPoyHBBleD4yEfNgaP5COKVh9
l4YZGQy5T4igI8asy5RSEmJXwoLCiOytGOzRgQzSoBBJnugzO4YBrD6iFisE
hFL41Zc+rG0p//v/o+1MoKOo0r7f6areO0unt6yA78iMjozb6MC4IiiICiMu
o4yOoqKojKK4gqIsRkCURUBEAgFEgshOAjQEAgQCBAJRA4EADQECSTr7Thby
3f9dqqubDsz7nvP1ObcISS9V1VX3d5/t/5gqz39lZ/yjUX4WeWbpTWhfLCQ7
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
/Zqa/0ghUMSg6Prxh5A+YznZJ0vvJ4hI7ik9wbS0e4LeZhK/coLjZzn7Qrxc
uQzGEIWiS1LIRL0+TUnJj3GgH998vkVEiAw/A5vz85cmgnEYs0AmwFEboYFn
yLmH+BusE77LthSVgY6cXUvYV1e3XHrdH1xgX03NMvJ3xEWV9fhyjo0dMzRj
rf8kJgqb9DzshRHPKpSFlPDbfjX4pQa/dFhdjBCiE3sNFg4b2vMKJYJOpZXk
KtxgjQwaCnhwGQeTJwlD2tdkxwt6OcNilHUzpD2NP1iIL1LYFPJL+BwIfuYf
WpIoEhBq/U07UzkEAbpZsz62462DEyG0XJSJMVDDi2fS0u4lzyKcY84g6Qrg
j6twj4zbo+g2oUhmx46JTh4RrZKWw7XV6xMvXNiUDO8OLirOCzw+CF4AfDm7
oAqImOeMOHxkNc9m0kZjpFRwta1PRPZznrSSGmXz7vnUcubURzEXzo22sF41
If/QODuIolxx0ORFKAWxkuWtBZyCIEOPPzko/wRKwREfdJdWzL30PCdIKWjw
er8lFETAHCFOvOXevRlxmMXCQ6TMKdTUVM9zDB36N3JUceHv3/99Aosb6Csr
PSmodEZy4fBhTJCf4iKabyp0QjxqYAIZng0Do3fMullD58CRvQE03P1VolAz
8iZNw8s3aBrf7m2sHzMottI9w1V2fGVCefmWJHwEj+Qzt7asT+hom2Vva5lh
b26cais5/Vnsju1vmWNi9DwuHlJgOXHi2xY0kvGylPr6tQn19YsIG/Ga0l5o
bl7mAiNrqqYjUyoRUiVUlM12AI8EkSLd80pCt3uCo75+ExYIu6TrDfmyurK1
iUcXP2z0jksUPaOdcu/b2Of1Ua4Ydvez5WAksYCBA/sEi6PpFSpSqacpZKld
W7MxSU15ean2HfOlmsGm5oqPYxkvdZyXmRs+thRs6WsELksy79DkfvcbfBTi
IKYxe/Dgg7fqiovnY4G7OE7Vtax0UVxDxSxHa+mHsS1nntIHzvQ1dDQtcLXV
Z7gaK2Y43VvHO3jhbPfrtQSWxdn3aqsOPaIHMOtKPrXiQ0Bqbf368Q7vnnF2
kBLEzN4xOBrXEY4TdEbASxhlnuhBrZcCmO7NI+1lPz2ibzr2mJ4CUwAwT+xJ
M+R5BsfwLGEEWoYGGVmUK3yyeSuZYUurMrqqgg+4hprgsHL5/9nKs9PWhavH
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
6q+t27enu2jTYFYyXLFghm+KK5yEIelZXvg64DohnIRI+Q0b9rghNOUn4Ozx
lB+7Ooy8/oJvqHAoKPhOulvmOgBD5P7KSqdY1WChSn/8+FwyghKDiKuqPET6
DylAXBCXYsxqes9bm1wIuw6PnTXrrRiqI9nLgHueVytkp78TixEcm1nyw7Ph
PUvxpr8ZGjbdp2/79GbtZbPI1/1awLJ68b36ikPvWprqZthb/LPsiJKqCSjt
8Blx1WBrboZDuDOlqmpLUkFBhoT2r+2o4QO7+a0NJT8y3bponhO6z0eOTLIF
/DNs7S/10HFXo05aw8ueoly6cJ+ezzHjgFy16utwrVqBR0sVgNSHRExVXEy2
Xwz9HGuTGB/RqdXcvCe1qor24klvoS8uXplw7Nii+KqyDBd0OqEDDUa2Xexn
aNp6t4YaEC0AybHIA6YDB/7NyISKQUWUwxAmCnSPfw8d+rSJSKXTxaINE5F8
xZMcpWenO3P3TnIUHZ5IPMis6b8RMqckqUt+HmMrPfmNs+5oP2PZgYd0YGTR
9j9rUC/jsgus151k9wDKrVunOBsatiWVly2XQVl0/BuHd/eHlqwt9LoGKEty
+5ryN92tdX9/g1Di7aWrf/93onz6JU/SX7MgruLcTGdd5ZJ4VNHm5Exzildn
pXK4I484VN4UHbWZDRPoLv2dWiktbuxj/R428qfDm+saPJljx74WE05EUJK2
6VJR6LAWeeLn0VcXecx385JPbbimGBGnKM1rAn2nTvU7WQV/+JAABkV4jgCl
cgA99yCVNXPQq+RAVLFg6vjx71gQU1IuXQoKViZxEGIrL19DYnE/ELB+58zJ
GWuFdcnLm2RD0JTBI5SEXKsrAgkHPqz/L0j4FiHhs1cjYYThBYLcqoOHHCHV
dkpC4iVQrGtCuppUKtq+w0jIh9pgQ2ktK4QJ8Z9N/CLqpKGQWXL8LoTTKiq2
JKtEQkItQqechBgWm797cEzW4rs1TGyGKFXzB0sW80KYWqLIRWgoNDZkJZ0t
+c6FQhjuLOIITZv4nLnkOEbzlZ79Tro5c3bOlHsz+YyAVSs+tHp3vRWNHnkm
FEOa8nGvQw+UwU2H5ieMKuADOREsXb70ReP48f+MZsM1degH54EQpSgNwIiS
0DEWla6q/EsrhEAlw5GMYgOA0edDtWtwuiLtzguFI6Eaf7D7F6nAcDi6nNCt
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
zp7vaKWNVANxo0a9Rww8sZSFupFhTvID413JMyJb1W3V+/fAvgaWApIakk3l
E6EnnvkrYUdrCsQMasSIQSYkJsePr4yqrISvArVJqaraGq2oq0sSQ5P4R8l3
kRJNfFYH6xfbQbOgf7qlvm6qOegfb2rwjzGBZyL7an4zctrDmWPIIg9udvn5
8ZFe7/aY0lIkHgiJG2PS0iD9ozcrhO6ss5cxDasHJNCEZpRpYl46y47tNcYz
ikQyXI78xpIKJHG8U4FdNYozdd6xX0m5EjgbNerdcOScVHP3m51hDZ3R2CBD
OxfqyWVlSbFeL2rLKyIxg4Fvxhr07fQMsvuzeeABPidqFjnVQffyE4l0nkwG
kXAGu6ayspS49esn2K+7zo5xexs+FJG/N/3LiLraaRa/73droD7eoQDPOE1j
Y1oczEAhKoJ2Dd4kKCLmnV1AiKa4ar6n2rlzhkMONCgLULaRluJ9+z6l25I4
zoYBv5KbtBIzCC+dfE9fUTzR4q+cYK70jCO94YvtnLHgwh/E3AxHv37P61m7
wtixg43YacvOXhh56RIsSpMxHQOGrjHl5Vui0dnJOvngatAKamR2J/42aesY
m+9MT43EM/wxPeVbs9xDXPzQHVS8h8EO6O/kwovPTLDX7L1XGUz/J9+w5yY+
uPsmvu6vm3gkb+XbOwulyY9oPNsf1hQmPaE9kPiRaexvH5gkjRuRq3799dtE
KYJRinTb0hio3x3XGNgV1+TfEddYsiyqybcpuqk+Mbqxdm1UsHxJZLB4ur1+
992qwIGH1ME13VWN95sUlzvxYZd7iadeS2ClvDyUE/D/lWK+tlnDh4158TEd
R12sBOZixSamK5vzL/ApLW2qHep6EUo8gxKpQTrpB3c1EoWyh5D/oSaM1hWv
Mnw3nF0I7SjpLc3vd02JxzVI1PeR5uzovyJRu1bM/xWJlFdN1tTyoUc41kt/
PeTTu5USiVRZ+1/TZmx/VMX8QBKX3CEkbx5qltoj0G7degst49vbBNQc5ZKT
c5zsITkgsizrBBRDEqkuXCA5BTmwtMIzsqKhQ181oNtM6rrXYukIsyzm84Hl
Hla+aFSFBfDWraOJxwdgA8UIZP5YaoDyDDOSvQiY2oow2pxjf4SUIWxYEYgz
9MuXDa5tr2kTNzynZmnVgPc6NZeF6caDDjGHqTrhhIV2tbq6vR2pv/HOODrq
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
wxJ7MLWG0Iyni/nTrbU182x+P5nQJeIpEjMVm5pSYxsbdsTWQ3Uh0gn/he8N
ypvQQzMb8KRt42yY31eV/54+4PlAHxSPQMmHhnJxYVDpWRzprdgScyb3D5FR
k2w52WBxbo74rNy2trdu3qRb+IyUV7RF+b+YyoonYMyXD454vrpF9grPIkd1
5booTk8wJKJgiDF1Y0+CgLydt/MKsEhMbA91U4JFVec+icDWppi88TmHfzTj
ZWlbxJWnRKOcQwP0rWmUd/AxZYhGCvIsFBzroUxcfpfAXisBKS/1ZgKkI/s+
Fr9NWfES8Sfyli5zVlWscF7IHRLuPvm2Vll0XsyP1O7c93QlFwboPPkDdKXu
93RVp3pr/Bn3Khv2iXxTAUWcCKJ7lcHzfbT1FZ/pa8s/F0/WR3pOVeT+QMdZ
6qqXOPx1q53sqK1e6XTnfmaoqphn95b9YS+4MNN2+tQ0W97JsZa0dXfwqatu
5ZOW/FOxce6NCvdDEWENtwlhyJdoUy1fchMfltv1BqV8alOLal9IBP638BNK
mYgGuy3sxND3a1cuoWt+3TX971jFrg25BClPscc1sIOeqNBDjp3lBDu/XRU7
tDe+JXbk4nN43F0VO/TGI5VAVtkrFd9PQkf1kNsFFPOuqo8ITQURuDO3mlpg
p4Uhg4Sn4dyVbkFzpT5bIouh6gkNww47IBTOyEBXIYR+j0u23kJThIHoJLDB
QnbUmfHMTHuPHl3o1WNlJ6mdLIl14VxJHtWUMS/oQRyEVHEVT4TEcJnj/Zgn
oQrUJ8fCa7u8fJ0TtMnNXUBoo6PyQLlcXSqk6vH7IhE6cGBFNNtpamjI7Niw
erSt6W4R+kDKI+IZep1DuxjuEQMxJO4vnt2Hxa/DVfL+SKF+1c9WaLMviQnP
qWPT7DXlmOSzwlmSN9pCkaL2lUyyYiwt2zWikJPsrlWUJVTqt4WyhGY8GhTt
8HU4PuPvkBFBGo6CHqwn2BDVNiZRbYM7jxjtPZ6kWAkl1dXbooGSvLwFdo7s
+XI6TF5kGRvN2jAzZAVBC4YsfPZZn3DscUm7hUgwmV4FRFE0AwVXLawIxds/
VKALXXr0Bu2I5QXEzExXnrh5rC1p62+29LSR1sryyZaAf4EtGNguLidcMU2N
qbGXm3aJeEkR8eKKDQa2RjeIx+X0WY76RT9YAkNfD2/48Fm9r/+/dLUfP6YN
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
2VjXTXemBIgdIuuw2OjT2jj1r2KjQ2Y1KFKF5hwsmPe6jS21sepWX5HhLpS1
zsubRma2IwtdXOxJEIm1NqI+XmutcZIsmiYuevHqs7OheIck47q4nJzxZPWN
mDazpVSG5u1I3lRFjbWpsHCpOydnqjMl5aVwaDJMGtFVh5naWat6Gwr2Qfxv
vIMttkWttcb6UHmUcnZPcmr7ulhx5UrljJIKeNibaGa2bxV0Fx50iq2/3mts
yblRhtmu3vwXkQqhSeUbuuqqN19BzHbzzmskA8y27vwvN+sF2wXFTl/Me9CM
/fyvfUznch8wNe26x1ideYu+dMPN+uLV18q50xPErPH2sMyx9rCM76LDIGRt
pEUF3k2v2EqOTnXVlS3DOrABkhHVvunOkqMjorJn36IXwmkOqmjljfqSjXcY
+F6++S5DU879poZdSahOITPrKrb83Vi7o7epdNM9ZAyq4nhbCn6+VV9y5G0r
9tKj71gr/njPeirnSVP+vCslvKYv/TZiICq2KBAVW/Y8YBKbc/uaBcWheNxy
amNvU2XyVXLzFTKZGcQOF41PX+sUz379jDVr61vhLL7sWfesGeaZmmjyaMrY
8JKF2u5/2cpKx0dVVkyIqqmaEFVXMzGqpvL7yNJTkN0ha2JjafEr5oaj98oN
h3tI9Yd6SDUHb5Oq8m+RDmTeRQIXMg1cFB35wQ7rjF35mng0Z3keN+VuH2CE
la4/+7q56eyzxnrfQOOZgn6GvG1/l7LW3ind2N0WRi5xiSqPTxrmDOvfv7cZ
bW0s5yyilig4i4bAh5omZOZAa3pZf5HxVMEoe+3BwbbmPUkmWODarHuMhcuv
1/PDq2vZc79J0FdsSzLlpg+J8KxLIUEPpAiRvWGcwHIZlphYYx1VrB048A79
JWWEWFKeirJ954Qp3qj8VzygfHS06L8bqYY9wrnZ8NsDiOAcULz9o8NeiUCp
cv6aCS6Rl6bPcGPedYdmma0aEQQYwXZBRx4DxQbU5Xo3Obj0MCnpZv/6TSNj
ckkRIn4eQmQak5Ju0Ac/L/lR0/+Z+Q5VcUJ6oCDkT403fUwZ3ccYNILWVM0O
0o1sh8V8XPA3LiFywiTJZUxygjnno9C9A128pFzCEhwnpeTUe9bcXQNMoZKQ
zJ53U75okD0XMSaVhinJNFgSNynYODVGa8znkr/m5432S2nuC4PHMzWG98Bi
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
/jPeOMpo6HVzIs9bYRmB/tL1N8U9+MCFPl7cjXtu/n5aErx18NqB5PDflh+e
TgF7kkremmnJNs1NheZW/eHt8XQmBiU5aHK2TqAe+HLQXb+2dlkmKkwwoejT
T+cG2tqWBL75Zk6qzEblQi0p3AOHVW65IwE5LBhPqnOYy66rzZo2Xps/9/oE
yl2B6soHk4a7Z6eBu/b2r8zUVTODu/r7VwTAW3uC05OHF/wjad/1Z/v2XHKs
u2/iEe6ei4/39DxyTcKetY+lDnWsy+YmKKpU0DfYKeGtR628JbrdQlKi2YgL
O285QFwYjvLhOFijoK6WFkpdSO7DaViCs7py0R1JZfPO9JY9lYExDiCuRNH0
xKszeJZ3+MsbEvZ0vZHJTc/u7k05Q18uTh++6jzfnt8c7977t9/59y2cljpa
vy5HGx39NF9x4Z+jS2aktf/5fP/23Axtln5bJ3HC8vwPhMXHIumkNPlsd3hl
LJMTkTcGBR12L5theDJlTNZ9YfLks+wM4RXb5m57+9fOjh9vim2oezARnjXQ
FciKJb7HVW+fZ5DUQP+G7KHBTTm7d28gocHu7g3Z33yzJKOi4umUsrKHSVSB
RBKEKZN2xcSSL8IYa/Lk3/rsjIXQKd/94VthjBUMzglUVdGGCZyxLN41Noea
DwgCSzU2rs/VQFNIHN2YV139enbZxhcNgkIQwS3hKMGCRMdc0mOBaWHr1z+R
ap9MIZs4gQUAdyIJUqz8uPzy0z0iR2FHsnGUCxxFcuvYD74PM9donoinRSeb
7z+7zPvB+8+kogYadSzo8dPw3ZKMpqo/+OiINbWm4lpzdg/rUQ7Gss1vIj2N
wVBii/mWlney+/pW64h5I6Ora1mguXlhWlPTgrT6+rmptbXPp1RVPZ0MDdmi
rAXMVTNUL4G2eOodpy2oXtWbznLxPOeK9X/0lZVOQ6wKiSOffnhf0r7+hemg
rZGhlRkOcJYSP7L67sTBk8Zp+4+MU0cPUWJGD9Jfx+ivX+qv8foL7x2mxew9
OVsbeOLq+MrNDyeh84aMrZ4mvz2is2z27KnJCGSKTOWUE5VKiCqDW5J4205U
oCmEM2tWneOtmn+YBqICTYlmIwhq7yd/8O+t+0fint6S7D0fL84YueBkz9C5
J3r2LZmR6iWE5Bzt+8+40WWPpbWfe5J3jc8TAzKibORmbDSOsFHmAbERn6QZ
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
0jOBSDneup7KeIFiJfztY8HHE/Tbom4IwrwFWbSGtro61MkxwCMzKNgzMeBD
6SyqCMrLfkdUno42avwODizWdf4FqZB/6DJ0D/AgV54PssYLQVM+bhhOTCr6
bjHVgaj4CvW+kDGFEeSeN0oNK/cT6K3bjV1q63rxz6ee+kfSjTdeEvfnP5/r
u/LK841sHSRWoR8NRqigSWRb26bcPXuCORDzPbWvZuz/S4F39Ei/rFl5gtis
fN/hLsfIWYkxw2vP9+ztfyqpr3dZoKfnNeLaaW9/NdDauoRMlDYCm9RvEU5L
F1OBoKWn8aMPNLlnDGEJph/OVKwqyGoqSPkKJXGal0vrUjvZIUTESTFfIv3D
dkX4uW4M0p5KpD0xRNqfZFIsYXz822B8oROIPeEPQoDbI9n3mtk0iUs603l8
KE0t33SBq/qjq30Q9Z5uqu/0dC/UdZ7VGRB1mLaU6XUt65kAn2GMF8KLEHWM
JcPoSyrqrurqxRkWZV6ByfFbv0zKqYrjFC1ZvIiE/4repl2tYbNOafX/goyK
ioUZqDNHV6XGxpJsrbl5Qw7KQ97NrqtbnQVro6zsOV2/eCqtpmZFFpV1J8rQ
920vTt9/5pEuQt4o+BC6Yu8fr8b0nZyp9b55ZwKNF6jIqTHieS6OujGp2zTM
/v/l2z8yohCLbytuU4gncLFjCaZB8bi4n1im6YiU6Axu1DLLW/nzpFVe4oke
BSjpJDKt0kqS6sqL3HVf/jMelioGeyxOQ1f2xWmdnQgovZMFdz+VZ3dJCYSU
ynJNDWq1oO5uoLu9ag2Tc52deEEESeblzzJJXj7rICrJ1KJx8fQrSEtp6SwE
qDMgp/FEZLX6+rd0xWNpBhprgZdZ8+724MsZwwXHuBGuBe3SpCoPT6ra+6ts
bffr9yRCSHkaCVK+GD1E1R+oVv3/4wk/US6ZRCjUQvLbkv1LK1805D0Xsle+
/ppKb6VYlFCPKcn5/OO0/MFZaJNQULjiJ5o4QcOBSPR0ItE3hUr0M/SaorK0
MdspVC9HF09ZvuaMexhLM4neWX+pu2XnU8ldu+dziVYHB9frGsbaLGKNMnGu
rFyQzsUZ4So6+HujKM5uHjuG9o3qAm52QpR1PYCIsOhVgQiT4Q4smS5CfawT
2QvILAPlQpYh2gqVbXdHRzC3q2tr3s6dG3LrP389q/PiAt/IkZbmwz6S1Xus
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
CQU6MLWO41Zurc/A3ynfl5+7hvbYv0eb+zw=\
\>", "ImageResolution" -> \
120.],ExpressionUUID->"948477ee-250a-4e67-baf3-e7a2640560b2"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[1., 0.820127, 0.126955], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[
      0.6666666666666667, 0.5467513333333334, 0.08463666666666668],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 
        1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification])}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"1.`", ",", "0.820127`", ",", "0.126955`"}], "]"}], 
     NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[1., 0.820127, 0.126955]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[1., 0.820127, 0.126955],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8750873687933865`*^9, 3.8750874148769455`*^9},
 CellLabel->"Out[44]=",ExpressionUUID->"a4ac6c48-6525-4656-991f-e95484a5ae5e"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[0.468742, 0., 0.0158236], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     DefaultBaseStyle->"ColorSwatchGraphics",
     Frame->True,
     FrameStyle->RGBColor[0.3124946666666667, 0., 0.010549066666666667`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 
        1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
         Magnification])}],
     PlotRangePadding->None],
    StyleBox[
     RowBox[{"RGBColor", "[", 
       RowBox[{"0.468742`", ",", "0.`", ",", "0.0158236`"}], "]"}], 
     NumberMarks -> False]],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[0.468742, 0., 0.0158236]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[0.468742, 0., 0.0158236],
  Editable->False,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8750873687933865`*^9, 3.87508741488795*^9},
 CellLabel->"Out[45]=",ExpressionUUID->"d4b502b3-606e-4a4d-b870-384da4a71c98"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1141.2, 579.6},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 for Microsoft Windows (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"da88982b-96f3-4f41-9f1f-dcb565001136"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 423, 6, 67, "Section",ExpressionUUID->"60dab23a-8dff-4a3f-b509-657ab3a5ce48"],
Cell[1006, 30, 50075, 1109, 2929, "Input",ExpressionUUID->"ea51977b-756d-4f3b-9354-ff76caba3369"]
}, Closed]],
Cell[CellGroupData[{
Cell[51118, 1144, 231, 4, 53, "Section",ExpressionUUID->"2706926d-6bda-419a-922e-503e2c4e0eb5"],
Cell[51352, 1150, 2064, 44, 124, "Input",ExpressionUUID->"78834e8c-a30e-4346-801f-f8ba693c1d83"]
}, Closed]],
Cell[CellGroupData[{
Cell[53453, 1199, 212, 4, 53, "Section",ExpressionUUID->"90c4215d-c825-4178-b950-760ce9a55111"],
Cell[CellGroupData[{
Cell[53690, 1207, 28476, 650, 1634, "Input",ExpressionUUID->"74e417b5-e88f-49cb-a4fc-6b32af2df3a6"],
Cell[82169, 1859, 9982, 257, 690, "Output",ExpressionUUID->"e96b8e87-9647-4165-881c-5d13e8d90c91"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[92200, 2122, 160, 3, 53, "Section",ExpressionUUID->"3f340995-78bb-461d-9c13-84fae0957ef8"],
Cell[CellGroupData[{
Cell[92385, 2129, 18612, 392, 1627, "Input",ExpressionUUID->"b2d33c42-f5e0-411d-a6d5-901d1524f044"],
Cell[111000, 2523, 3340, 58, 369, "Output",ExpressionUUID->"eea2ec28-203f-4fb2-b08d-57941ec609bc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[114389, 2587, 305, 5, 53, "Section",ExpressionUUID->"11dd465f-84a8-48d5-be69-320eb77ea32f"],
Cell[114697, 2594, 4911, 105, 448, "Input",ExpressionUUID->"0fe0df06-5fb5-488a-a342-34593eb6ecf8"],
Cell[CellGroupData[{
Cell[119633, 2703, 4091, 75, 295, "Input",ExpressionUUID->"37e2cbe7-881c-4173-9032-6873ba370714"],
Cell[123727, 2780, 759, 11, 33, "Output",ExpressionUUID->"f4988674-9221-4ae3-b69d-ca086f0d94af"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[124535, 2797, 172, 3, 53, "Section",ExpressionUUID->"9061c448-c789-4ea6-b2f7-fa86c1d1d31c"],
Cell[CellGroupData[{
Cell[124732, 2804, 24050, 587, 1728, "Input",ExpressionUUID->"ea3524ea-9c6f-442e-9b4f-a5246e240c7b"],
Cell[148785, 3393, 9452, 250, 409, "Output",ExpressionUUID->"15408a54-7a92-4973-b558-60ad115b1a13"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[158286, 3649, 217, 4, 53, "Section",ExpressionUUID->"70526869-15b3-43f1-951a-2aa8789a6e99"],
Cell[CellGroupData[{
Cell[158528, 3657, 2732, 69, 295, "Input",ExpressionUUID->"e4a87950-cdf4-47b3-8c19-1331dca09de8"],
Cell[161263, 3728, 491179, 8204, 374, 50919, 986, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"948477ee-250a-4e67-baf3-e7a2640560b2"],
Cell[652445, 11934, 1794, 48, 32, "Output",ExpressionUUID->"a4ac6c48-6525-4656-991f-e95484a5ae5e"],
Cell[654242, 11984, 1774, 47, 32, "Output",ExpressionUUID->"d4b502b3-606e-4a4d-b870-384da4a71c98"]
}, Open  ]]
}, Open  ]]
}
]
*)

